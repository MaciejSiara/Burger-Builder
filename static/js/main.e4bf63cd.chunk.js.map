{"version":3,"sources":["styles/BurgerIngredients.module.css","styles/SideDrawer.module.css","styles/BuildController.module.css","styles/Input.module.css","styles/Toolbar.module.css","styles/NavigationItem.module.css","styles/BuildControls.module.css","styles/Button.module.css","styles/Order.module.css","assets/images/logo.png","styles/Logo.module.css","styles/NavigationItems.module.css","styles/DrawerToggle.module.css","styles/Layout.module.css","styles/Backdrop.module.css","styles/Burger.module.css","styles/Modal.module.css","styles/Spinner.module.css","styles/CheckoutSummary.module.css","styles/ContactData.module.css","styles/Auth.module.css","components/Logo/Logo.jsx","components/Navigation/NavigationItems/NavigationItem.jsx","components/Navigation/NavigationItems/NavigationItems.jsx","components/Navigation/SideDrawer/DrawerToggle.jsx","components/Navigation/Toolbar/Toolbar.jsx","components/UI/Backdrop/Backdrop.jsx","components/Navigation/SideDrawer/SideDrawer.jsx","components/Layout/Layout.jsx","components/Burger/BurgerIngredients/BurgerIngredients.jsx","components/Burger/Burger.jsx","components/Burger/BuildControls/BuildController.jsx","components/Burger/BuildControls/BuildControls.jsx","components/UI/Modal/Modal.jsx","components/UI/Button/Button.jsx","components/Burger/OrderSummary/OrderSummary.jsx","components/UI/Spinner/Spinner.jsx","hoc/withErrorHandler.jsx","axios-orders.js","store/actions/auth.js","store/actions/actionTypes.js","containers/BurgerBuilder/BurgerBuilder.jsx","store/actions/burgerBuilder.js","store/actions/order.js","components/Order/CheckoutSummary.jsx","components/UI/Input/Input.jsx","containers/Checkout/ContactData.jsx","containers/Checkout/Checkout.jsx","components/Order/Order.jsx","containers/Orders/Orders.jsx","containers/Auth/Auth.jsx","containers/Auth/Logout.jsx","App.js","store/utility.js","store/reducers/burgerBuilder.js","store/reducers/order.js","store/reducers/auth.js","index.js"],"names":["module","exports","logo","props","className","styles","Logo","style","height","src","burgerLogo","alt","navigationItem","NavigationItem","to","link","exact","activeClassName","active","onClick","clicked","children","navigationItems","NavigationItems","isAuthenticated","DrawerToggle","Menu","click","toolbar","console","log","isAuth","Toolbar","open","DesktopOnly","backdrop","show","Backdrop","SideDrawer","attachedClasses","Close","Open","closed","join","Layout","state","showSideDrawer","sideDrawerClosedHandle","setState","prevState","this","Content","Component","connect","auth","idToken","burgerIngredient","ingredient","type","BreadBottom","BreadTop","Seeds1","Seeds2","Meat","Cheese","Salad","Bacon","withRouter","transformedIngredients","Object","keys","ingredients","map","igKey","Array","_","i","key","reduce","arr","el","concat","length","Burger","buildController","BuildController","Label","label","Less","removed","disabled","More","added","controls","buildControls","BuildControls","price","toFixed","ctrl","ingredientAdded","ingredientRemoved","OrderButton","purchasable","purchasing","Modal","nextProps","nextState","modalClosed","transform","opacity","button","Button","btnType","OrderSummary","ingredientSummary","textTransform","Fragment","purchaseCancelled","purchaseContinued","Spinner","Loader","withErrorHandler","WrappedComponent","axios","error","errorConfirmedHandler","reqInterceptor","interceptors","request","use","req","resInterceptor","response","res","eject","message","instance","create","baseURL","authSuccess","userId","signOut","localStorage","removeItem","checkAuthTimeout","expTime","dispatch","setTimeout","setAuthRedirectPath","path","BurgerBuilder","purchaseHandler","onSetAuthRedirectPath","history","push","purchaseCancelHandler","purchaseContinueHandler","onInitPurchased","onInitIngredients","sum","disabledInfo","ings","orderSummary","burger","onAddIngredient","onRemoveIngredient","updatePurchaseState","burgerBuilder","totalPrice","ingName","ingredientName","get","then","data","catch","err","actions","CheckoutSummary","width","margin","checkoutCancel","checkoutContinue","Input","inputElement","inputStyle","InputElement","invalid","shouldValidate","touched","Invalid","elementType","elementConfig","value","onChange","changed","options","option","displayValue","ContactData","orderForm","name","placeholder","validation","required","minLength","valid","street","zipCode","country","email","deliveryMethod","formIsValid","orderHandler","event","preventDefault","formData","priceFixed","Number","parseFloat","order","orderData","onOrderBurger","token","checkValidation","rules","isValid","trim","changedHandler","e","updatedOrderForm","updatedFormElements","target","formElementsArray","id","config","form","onSubmit","loading","post","orderId","purchaseBurgerSuccess","purchaseBurgerFail","Checkout","checkoutCancelHandler","goBack","checkoutContinueHandler","replace","summary","purchased","match","component","Order","amount","displayIngredients","ing","Ingredient","Orders","onFetchOrders","orders","queryParams","fetchedOrders","Auth","isEmail","password","isSignup","checkValidity","rule","test","inputChangedHandler","updatedControls","element","submitHandler","onAuth","switchAuthModeHandler","buildingBurger","authRedirectPath","formElement","errorMessage","color","fontWeight","authRedirect","building","authData","returnSecureToken","url","expirationDate","Date","getTime","expiresIn","setItem","localId","authFail","Logout","onLogout","App","onTryAuthSignup","routes","getItem","updateObject","oldObject","updatedProperties","initialState","INGREDIENT_PRICES","salad","cheese","bacon","meat","addIngredient","action","updatedIngredientAdd","updateStateAdd","removeIngredient","updatedIngredientRem","updateStateRem","setIngredients","fetchIngredients","reducer","initPurchase","purchaseBurgerStart","newOrder","fetchOrdersStart","fetchOrdersSuccess","fetchOrdersFail","authStart","authSignOut","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","rootReducer","combineReducers","burgerBuilderReducer","orderReducer","authReducer","store","createStore","applyMiddleware","thunk","app","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sHACAA,EAAOC,QAAU,CAAC,YAAc,uCAAuC,SAAW,oCAAoC,OAAS,kCAAkC,OAAS,kCAAkC,KAAO,gCAAgC,OAAS,kCAAkC,MAAQ,iCAAiC,MAAQ,mC,mBCA/UD,EAAOC,QAAU,CAAC,WAAa,+BAA+B,KAAO,yBAAyB,MAAQ,0BAA0B,KAAO,2B,iBCAvID,EAAOC,QAAU,CAAC,gBAAkB,yCAAyC,MAAQ,+BAA+B,KAAO,8BAA8B,KAAO,gC,gBCAhKD,EAAOC,QAAU,CAAC,MAAQ,qBAAqB,MAAQ,qBAAqB,aAAe,4BAA4B,QAAU,yB,mBCAjID,EAAOC,QAAU,CAAC,QAAU,yBAAyB,KAAO,sBAAsB,YAAc,+B,kBCAhGD,EAAOC,QAAU,CAAC,eAAiB,uCAAuC,OAAS,iC,kBCAnFD,EAAOC,QAAU,CAAC,cAAgB,qCAAqC,YAAc,mCAAmC,OAAS,gC,gBCAjID,EAAOC,QAAU,CAAC,OAAS,uBAAuB,QAAU,wBAAwB,OAAS,yB,gBCA7FD,EAAOC,QAAU,CAAC,MAAQ,qBAAqB,WAAa,4B,4BCD5DD,EAAOC,QAAU,IAA0B,kC,gBCC3CD,EAAOC,QAAU,CAAC,KAAO,qB,gBCAzBD,EAAOC,QAAU,CAAC,gBAAkB,2C,gBCApCD,EAAOC,QAAU,CAAC,KAAO,6B,gBCAzBD,EAAOC,QAAU,CAAC,QAAU,0B,gBCA5BD,EAAOC,QAAU,CAAC,SAAW,6B,gBCA7BD,EAAOC,QAAU,CAAC,OAAS,yB,gBCA3BD,EAAOC,QAAU,CAAC,MAAQ,uB,gBCA1BD,EAAOC,QAAU,CAAC,OAAS,wBAAwB,MAAQ,uBAAuB,MAAQ,yB,gBCA1FD,EAAOC,QAAU,CAAC,gBAAkB,2C,gBCApCD,EAAOC,QAAU,CAAC,YAAc,iCAAiC,MAAQ,6B,gBCAzED,EAAOC,QAAU,CAAC,KAAO,mBAAmB,MAAQ,oBAAoB,YAAc,4B,2PCWvEC,EARF,SAAAC,GACV,OACG,yBAAKC,UAAWC,IAAOC,KAAMC,MAAO,CAACC,OAAQL,EAAMK,SAChD,yBAAKC,IAAKC,IAAYC,IAAI,O,iBCYpBC,EAfQ,SAAAT,GACpB,OACG,wBAAIC,UAAWC,IAAOQ,gBACnB,kBAAC,IAAD,CACGC,GAAIX,EAAMY,KACVC,OAAK,EACLC,gBAAiBZ,IAAOa,OACxBC,QAAShB,EAAMiB,SAEdjB,EAAMkB,Y,iBCeJC,EAxBS,SAAAnB,GACrB,OACG,wBAAIC,UAAWC,IAAOkB,iBACnB,kBAACV,EAAD,CAAgBE,KAAK,IAAIK,QAASjB,EAAMiB,SAAxC,kBAGCjB,EAAMqB,gBACJ,kBAACX,EAAD,CAAgBE,KAAK,UAAUK,QAASjB,EAAMiB,SAA9C,UAGC,KACFjB,EAAMqB,gBAKL,kBAACX,EAAD,CAAgBE,KAAK,UAAUK,QAASjB,EAAMiB,SAA9C,UAJA,kBAACP,EAAD,CAAgBE,KAAK,QAAQK,QAASjB,EAAMiB,SAA5C,oB,iBCbG,SAASK,EAAatB,GAClC,OACG,yBAAKC,UAAWC,IAAOqB,KAAMP,QAAShB,EAAMwB,OACzC,8BACA,8BACA,+B,qBCcMC,EAhBC,SAAAzB,GAGb,OAFC0B,QAAQC,IAAI3B,EAAM4B,QAGhB,4BAAQ3B,UAAWC,IAAO2B,SACvB,kBAACP,EAAD,CAAcE,MAAOxB,EAAM8B,OAC3B,yBAAK7B,UAAWC,IAAOC,MACpB,kBAACA,EAAD,OAEH,yBAAKF,UAAWC,IAAO6B,aACpB,kBAACX,EAAD,CAAiBC,gBAAiBrB,EAAM4B,Y,kCCPrCI,EANE,SAAAhC,GACd,OAAOA,EAAMiC,KACV,yBAAKhC,UAAWC,IAAOgC,SAAUlB,QAAShB,EAAMiB,UAC/C,M,iBCAQ,SAASkB,EAAWnC,GAChC,IAAIoC,EAAkB,CAAClC,IAAOiC,WAAYjC,IAAOmC,OAKjD,OAJIrC,EAAM8B,OACPM,EAAkB,CAAClC,IAAOiC,WAAYjC,IAAOoC,OAI7C,oCACG,kBAACJ,EAAD,CAAUD,KAAMjC,EAAM8B,KAAMb,QAASjB,EAAMuC,SAC3C,yBAAKtC,UAAWmC,EAAgBI,KAAK,MAClC,yBAAKvC,UAAWC,IAAOC,MACpB,kBAACA,EAAD,OAEH,6BACG,kBAACiB,EAAD,CACGC,gBAAiBrB,EAAM4B,OACvBX,QAASjB,EAAMuC,Y,IChB3BE,E,4MACHC,MAAQ,CACLC,gBAAgB,G,EAGnBC,uBAAyB,WACtB,EAAKC,UAAS,SAAAC,GACX,MAAO,CAAEH,gBAAiBG,EAAUH,oB,uDAKvC,OACG,oCACG,kBAACd,EAAD,CACGC,KAAMiB,KAAKH,uBACXhB,OAAQmB,KAAK/C,MAAMqB,kBAEtB,kBAACc,EAAD,CACGI,OAAQQ,KAAKH,uBACbd,KAAMiB,KAAKL,MAAMC,eACjBf,OAAQmB,KAAK/C,MAAMqB,kBAEtB,0BAAMpB,UAAWC,IAAO8C,SAAUD,KAAK/C,MAAMkB,e,GAvBpC+B,aAmCNC,eANS,SAAAR,GACrB,MAAO,CACJrB,gBAAwC,OAAvBqB,EAAMS,KAAKC,WAIM,KAAzBF,CAA+BT,G,iDCC/BY,EAtCU,SAAArD,GACtB,IAAIsD,EAAa,KAEjB,OAAQtD,EAAMuD,MACX,IAAK,eACFD,EAAa,yBAAKrD,UAAWC,IAAOsD,cACpC,MACH,IAAK,YACFF,EACG,yBAAKrD,UAAWC,IAAOuD,UACpB,yBAAKxD,UAAWC,IAAOwD,SACvB,yBAAKzD,UAAWC,IAAOyD,UAG7B,MACH,IAAK,OACFL,EAAa,yBAAKrD,UAAWC,IAAO0D,OACpC,MACH,IAAK,SACFN,EAAa,yBAAKrD,UAAWC,IAAO2D,SACpC,MACH,IAAK,QACFP,EAAa,yBAAKrD,UAAWC,IAAO4D,QACpC,MACH,IAAK,QACFR,EAAa,yBAAKrD,UAAWC,IAAO6D,QACpC,MACH,QACGT,EAAa,KAGnB,OAAOA,GCRKU,eAtBA,SAAAhE,GACZ,IAAIiE,EAAyBC,OAAOC,KAAKnE,EAAMoE,aAC3CC,KAAI,SAAAC,GACF,OAAO,YAAIC,MAAMvE,EAAMoE,YAAYE,KAASD,KAAI,SAACG,EAAGC,GACjD,OAAO,kBAAC,EAAD,CAAkBC,IAAKJ,EAAQG,EAAGlB,KAAMe,UAGpDK,QAAO,SAACC,EAAKC,GACX,OAAOD,EAAIE,OAAOD,KAClB,IAIN,OAHsC,IAAlCZ,EAAuBc,SACxBd,EAAyB,+DAGzB,yBAAKhE,UAAWC,IAAO8E,QACpB,kBAAC,EAAD,CAAkBzB,KAAK,cACtBU,EACD,kBAAC,EAAD,CAAkBV,KAAK,qB,mCCCjB0B,GApBS,SAAAjF,GACrB,OACG,yBAAKC,UAAWC,KAAOgF,iBACpB,yBAAKjF,UAAWC,KAAOiF,OAClBnF,EAAMoF,OAEX,4BACGnF,UAAWC,KAAOmF,KAClBrE,QAAShB,EAAMsF,QACfC,SAAUvF,EAAMuF,UAHnB,QAOA,4BAAQtF,UAAWC,KAAOsF,KAAMxE,QAAShB,EAAMyF,OAA/C,UCXHC,GAAW,CACd,CAAEN,MAAO,QAAS7B,KAAM,SACxB,CAAE6B,MAAO,QAAS7B,KAAM,SACxB,CAAE6B,MAAO,SAAU7B,KAAM,UACzB,CAAE6B,MAAO,OAAQ7B,KAAM,SAgCXoC,GA7BO,SAAA3F,GACnB,OACG,yBAAKC,UAAWC,IAAO0F,eACpB,6CACkB,gCAAS5F,EAAM6F,MAAMC,QAAQ,KAE9CJ,GAASrB,KAAI,SAAA0B,GACX,OACG,kBAACb,GAAD,CACGR,IAAKqB,EAAKX,MACVA,MAAOW,EAAKX,MACZK,MAAO,kBAAMzF,EAAMgG,gBAAgBD,EAAKxC,OACxC+B,QAAS,kBAAMtF,EAAMiG,kBAAkBF,EAAKxC,OAC5CgC,SAAUvF,EAAMuF,SAASQ,EAAKxC,MAC9Ba,YAAapE,EAAMoE,iBAI5B,4BACGnE,UAAWC,IAAOgG,YAClBX,UAAWvF,EAAMmG,YACjBnF,QAAShB,EAAMoG,YAEdpG,EAAM4B,OAAS,YAAc,sB,oBCP3ByE,G,oLAvBUC,EAAWC,GAC9B,OAAOD,EAAUrE,OAASc,KAAK/C,MAAMiC,MAAQqE,EAAUpF,WAAa6B,KAAK/C,MAAMkB,W,+BAI/E,OACG,oCACG,kBAACgB,EAAD,CAAUD,KAAMc,KAAK/C,MAAMiC,KAAMhB,QAAS8B,KAAK/C,MAAMwG,cACrD,yBACGvG,UAAWC,KAAOmG,MAClBjG,MAAO,CACJqG,UAAW1D,KAAK/C,MAAMiC,KACjB,gBACA,qBACLyE,QAAS3D,KAAK/C,MAAMiC,KAAO,IAAM,MAGnCc,KAAK/C,MAAMkB,e,GAlBP+B,a,oBCWL0D,GAZA,SAAA3G,GACZ,OACG,4BACGC,UAAW,CAACC,KAAO0G,OAAQ1G,KAAOF,EAAM6G,UAAUrE,KAAK,KACvDxB,QAAShB,EAAMiB,QACfsE,SAAUvF,EAAMuF,UAEfvF,EAAMkB,WC8BD4F,G,oLAnCTpF,QAAQC,IAAI,gC,+BAGL,IAAD,OACAoF,EAAoB7C,OAAOC,KAAKpB,KAAK/C,MAAMoE,aAAaC,KAC3D,SAAAC,GACG,OACG,wBAAII,IAAKJ,GACN,0BAAMlE,MAAO,CAAE4G,cAAe,eAAiB1C,GADlD,IAEI,EAAKtE,MAAMoE,YAAYE,OAMpC,OACG,kBAAC,IAAM2C,SAAP,KACG,0CACA,iEACA,4BAAKF,GACL,2BACG,gDAAsBhE,KAAK/C,MAAM6F,MAAMC,QAAQ,KAElD,oDACA,kBAACc,GAAD,CAAQC,QAAQ,SAAS5F,QAAS8B,KAAK/C,MAAMkH,mBAA7C,UAGA,kBAACN,GAAD,CAAQC,QAAQ,UAAU5F,QAAS8B,KAAK/C,MAAMmH,mBAA9C,iB,GA7BelE,a,oBCAZ,SAASmE,KACrB,OAAO,yBAAKnH,UAAWC,KAAOmH,QAAvB,cCDV,IA8CeC,GA9CU,SAACC,EAAkBC,GACzC,mNACG9E,MAAQ,CACL+E,MAAO,MAFb,EAuBGC,sBAAwB,WACrB,EAAK7E,SAAS,CAAE4E,MAAO,QAxB7B,mEAKyB,IAAD,OAClB1E,KAAK4E,eAAiBH,EAAMI,aAAaC,QAAQC,KAAI,SAAAC,GAElD,OADA,EAAKlF,SAAS,CAAE4E,MAAO,OAChBM,KAEVhF,KAAKiF,eAAiBR,EAAMI,aAAaK,SAASH,KAC/C,SAAAI,GAAG,OAAIA,KACP,SAAAT,GACG,EAAK5E,SAAS,CAAE4E,MAAOA,SAbnC,6CAmBKD,EAAMI,aAAaC,QAAQM,MAAMpF,KAAK4E,gBACtCH,EAAMI,aAAaK,SAASE,MAAMpF,KAAKiF,kBApB5C,+BA4BM,OACG,oCACG,kBAAC,GAAD,CACG/F,KAAMc,KAAKL,MAAM+E,MACjBjB,YAAazD,KAAK2E,uBAEjB3E,KAAKL,MAAM+E,MAAQ1E,KAAKL,MAAM+E,MAAMW,QAAU,MAGlD,kBAACb,EAAqBxE,KAAK/C,YArCvC,GAAqBiD,c,oBCEToF,GAJEb,KAAMc,OAAO,CAC3BC,QAAS,kDCMCC,GAAc,SAACpF,EAASqF,GAClC,MAAO,CACJlF,KCQsB,eDPtBH,QAASA,EACTqF,OAAQA,IAWDC,GAAU,WAKpB,OAJAC,aAAaC,WAAW,SACxBD,aAAaC,WAAW,kBACxBD,aAAaC,WAAW,UAEjB,CACJrF,KCTsB,iBDafsF,GAAmB,SAAAC,GAC7B,OAAO,SAAAC,GACJC,YAAW,WACRD,EAASL,QACC,IAAVI,KAsCIG,GAAsB,SAAAC,GAChC,MAAO,CACJ3F,KCxDgC,yBDyDhC2F,KAAMA,IElENC,G,4MACHzG,MAAQ,CACL0D,YAAY,G,EAkBfgD,gBAAkB,WACX,EAAKpJ,MAAMqB,gBACZ,EAAKwB,SAAS,CAAEuD,YAAY,KAE5B,EAAKpG,MAAMqJ,sBAAsB,aACjC,EAAKrJ,MAAMsJ,QAAQC,KAAK,W,EAI9BC,sBAAwB,WACrB,EAAK3G,SAAS,CAAEuD,YAAY,K,EAG/BqD,wBAA0B,WAEvB,EAAKzJ,MAAM0J,kBACX,EAAK1J,MAAMsJ,QAAQC,KAAK,c,kEA9BxBxG,KAAK/C,MAAM2J,sB,0CAGMvF,GAQjB,OAPYF,OAAOC,KAAKC,GACpBC,KAAI,SAAAC,GACF,OAAOF,EAAYE,MAErBK,QAAO,SAACiF,EAAK/E,GACX,OAAO+E,EAAM/E,IACb,GACO,I,+BAuBb,IAAMgF,EAAY,eAAQ9G,KAAK/C,MAAM8J,MACrC,IAAK,IAAIpF,KAAOmF,EACbA,EAAanF,GAAOmF,EAAanF,IAAQ,EAG5C,IAAIqF,EAAe,KACfC,EAASjH,KAAK/C,MAAMyH,MAAQ,0BAA4B,kBAACL,GAAD,MA2B5D,OAzBIrE,KAAK/C,MAAM8J,OACZE,EACG,oCACG,kBAAChF,EAAD,CAAQZ,YAAarB,KAAK/C,MAAM8J,OAChC,kBAAClE,GAAD,CACGI,gBAAiBjD,KAAK/C,MAAMiK,gBAC5BhE,kBAAmBlD,KAAK/C,MAAMkK,mBAC9B3E,SAAUsE,EACVhE,MAAO9C,KAAK/C,MAAM6F,MAClBM,YAAapD,KAAKoH,oBAAoBpH,KAAK/C,MAAM8J,MACjDlI,OAAQmB,KAAK/C,MAAMqB,gBACnB+E,WAAYrD,KAAKqG,mBAI1BW,EACG,kBAAC,GAAD,CACG3F,YAAarB,KAAK/C,MAAM8J,KACxBjE,MAAO9C,KAAK/C,MAAM6F,MAClBqB,kBAAmBnE,KAAKyG,sBACxBrC,kBAAmBpE,KAAK0G,2BAM9B,oCACG,kBAAC,GAAD,CACGxH,KAAMc,KAAKL,MAAM0D,WACjBI,YAAazD,KAAKyG,uBAEjBO,GAEHC,O,GAjFe/G,aAgHbC,gBAzBS,SAAAR,GACrB,MAAO,CACJoH,KAAMpH,EAAM0H,cAAchG,YAC1ByB,MAAOnD,EAAM0H,cAAcC,WAC3B5C,MAAO/E,EAAM0H,cAAc3C,MAC3BpG,gBAAwC,OAAvBqB,EAAMS,KAAKC,YAIP,SAAA2F,GACxB,MAAO,CACJkB,gBAAiB,SAAAK,GAAO,OAAIvB,EC3GxB,CACJxF,KFJwB,iBEKxBgH,eDyG2DD,KAC3DJ,mBAAoB,SAAAI,GAAO,OACxBvB,ECtGC,CACJxF,KFV2B,oBEW3BgH,eDoGqCD,KACrCX,kBAAmB,WAChBZ,GCpFC,SAAAA,GACFvB,GACIgD,IAAI,iEACJC,MAAK,SAAAvC,GACHa,EAjBJ,CACJxF,KFhByB,kBEiBzBa,YAegC8D,EAAIwC,UAE9BC,OAAM,SAAAC,GACJ7B,EAbJ,CACFxF,KFtBgC,oCCiHlCmG,gBAAiB,WACdX,EEjFC,CACJxF,KH5BuB,mBC8GvB8F,sBAAuB,SAAAH,GAAI,OACxBH,EAAS8B,GAA4B3B,QAI/BhG,CAGboE,GAAiB6B,GAAe3B,K,oBGzHnB,SAASsD,GAAgB9K,GACrC,OACG,yBAAKC,UAAWC,KAAO4K,iBACpB,gDACA,yBAAK1K,MAAO,CAAE2K,MAAO,OAAQC,OAAQ,SAClC,kBAAChG,EAAD,CAAQZ,YAAapE,EAAMoE,eAE9B,kBAACwC,GAAD,CAAQC,QAAQ,SAAS5F,QAASjB,EAAMiL,gBAAxC,UAGA,kBAACrE,GAAD,CAAQC,QAAQ,UAAU5F,QAASjB,EAAMkL,kBAAzC,a,wBCdM,SAASC,GAAMnL,GAC3B,IAAIoL,EAAe,KACbC,EAAa,CAACnL,KAAOoL,cAM3B,OAJItL,EAAMuL,SAAWvL,EAAMwL,gBAAkBxL,EAAMyL,SAChDJ,EAAW9B,KAAKrJ,KAAOwL,SAGlB1L,EAAM2L,aACX,IAAK,QACFP,EACG,yCACGnL,UAAWoL,EAAW7I,KAAK,MACvBxC,EAAM4L,cAFb,CAGGC,MAAO7L,EAAM6L,MACbC,SAAU9L,EAAM+L,WAGtB,MACH,IAAK,WACFX,EACG,4CACGnL,UAAWoL,EAAW7I,KAAK,MACvBxC,EAAM4L,cAFb,CAGGC,MAAO7L,EAAM6L,MACbC,SAAU9L,EAAM+L,WAGtB,MACH,IAAK,SACFX,EACG,4BACGnL,UAAWoL,EAAW7I,KAAK,KAC3BqJ,MAAO7L,EAAM6L,MACbC,SAAU9L,EAAM+L,SAEf/L,EAAM4L,cAAcI,QAAQ3H,KAAI,SAAA4H,GAAM,OACpC,4BAAQvH,IAAKuH,EAAOJ,MAAOA,MAAOI,EAAOJ,OACrCI,EAAOC,kBAKpB,MACH,QACGd,EACG,yCACGnL,UAAWoL,EAAW7I,KAAK,MACvBxC,EAAM4L,cAFb,CAGGC,MAAO7L,EAAM6L,MACbC,SAAU9L,EAAM+L,WAK5B,OACG,yBAAK9L,UAAWC,KAAOiL,OACpB,2BAAOlL,UAAWC,KAAOiF,OAAQnF,EAAMoF,OACtCgG,G,wBCjDJe,G,4MACHzJ,MAAQ,CACL0J,UAAW,CACRC,KAAM,CACHV,YAAa,QACbC,cAAe,CACZrI,KAAM,OACN+I,YAAa,aAEhBT,MAAO,GACPU,WAAY,CACTC,UAAU,EACVC,UAAW,GAEdC,OAAO,EACPjB,SAAS,GAEZkB,OAAQ,CACLhB,YAAa,QACbC,cAAe,CACZrI,KAAM,OACN+I,YAAa,UAEhBT,MAAO,GACPU,WAAY,CACTC,UAAU,GAEbE,OAAO,EACPjB,SAAS,GAEZmB,QAAS,CACNjB,YAAa,QACbC,cAAe,CACZrI,KAAM,OACN+I,YAAa,YAEhBT,MAAO,GACPU,WAAY,CACTC,UAAU,GAEbE,OAAO,EACPjB,SAAS,GAEZoB,QAAS,CACNlB,YAAa,QACbC,cAAe,CACZrI,KAAM,OACN+I,YAAa,WAEhBT,MAAO,GACPU,WAAY,CACTC,UAAU,GAEbE,OAAO,EACPjB,SAAS,GAEZqB,MAAO,CACJnB,YAAa,QACbC,cAAe,CACZrI,KAAM,OACN+I,YAAa,cAEhBT,MAAO,GACPU,WAAY,CACTC,UAAU,GAEbE,OAAO,EACPjB,SAAS,GAEZsB,eAAgB,CACbpB,YAAa,SACbC,cAAe,CACZI,QAAS,CACN,CAAEH,MAAO,UAAWK,aAAc,WAClC,CACGL,MAAO,WACPK,aAAc,cAIvBL,MAAO,UACPU,WAAY,GACZG,OAAO,IAGbM,aAAa,G,EAGhBC,aAAe,SAAAC,GACZA,EAAMC,iBACN,IAAMC,EAAW,GACjB,IAAK,IAAIvI,KAAM,EAAKnC,MAAM0J,UACvBgB,EAASvI,GAAM,EAAKnC,MAAM0J,UAAUvH,GAAIgH,MAE3C,IAAMwB,EAAaC,OAAOC,WAAW,EAAKvN,MAAM6F,OAAOC,QAAQ,GACzD0H,EAAQ,CACXpJ,YAAa,EAAKpE,MAAM8J,KACxBjE,MAAOwH,EACPI,UAAWL,EACX3E,OAAQ,EAAKzI,MAAMyI,QAEtB/G,QAAQC,IAAI,iBAEZ,EAAK3B,MAAM0N,cAAcF,EAAO,EAAKxN,MAAM2N,Q,EAG9CC,gBAAkB,SAAC/B,EAAOgC,GACvB,IAAIC,GAAU,EAQd,OAPID,EAAMrB,WACPsB,EAA2B,KAAjBjC,EAAMkC,QAAiBD,GAGhCD,EAAMpB,YACPqB,EAAUjC,EAAM9G,QAAU8I,EAAMpB,WAAaqB,GAEzCA,G,EAGVE,eAAiB,SAACC,EAAG7C,GAClB,IAAM8C,EAAgB,eAAQ,EAAKxL,MAAM0J,WACnC+B,EAAmB,eACnBD,EAAiB9C,IAEvB+C,EAAoBtC,MAAQoC,EAAEG,OAAOvC,MACrCsC,EAAoBzB,MAAQ,EAAKkB,gBAC9BO,EAAoBtC,MACpBsC,EAAoB5B,YAEvB4B,EAAoB1C,SAAU,EAC9ByC,EAAiB9C,GAAgB+C,EAEjC,IAAInB,GAAc,EAClB,IAAK,IAAI5B,KAAgB8C,EACtBlB,EAAckB,EAAiB9C,GAAcsB,OAASM,EAGzD,EAAKnK,SAAS,CACXuJ,UAAW8B,EACXlB,YAAaA,K,uDAIT,IAAD,OACFqB,EAAoB,GACxB,IAAK,IAAIxJ,KAAM9B,KAAKL,MAAM0J,UACvBiC,EAAkB9E,KAAK,CACpB+E,GAAIzJ,EACJ0J,OAAQxL,KAAKL,MAAM0J,UAAUvH,KAInC,IAAI2J,EACD,0BAAMC,SAAU1L,KAAKkK,cACjBoB,EAAkBhK,KAAI,SAAAQ,GAAE,OACtB,kBAACsG,GAAD,CACGzG,IAAKG,EAAGyJ,GACR3C,YAAa9G,EAAG0J,OAAO5C,YACvBC,cAAe/G,EAAG0J,OAAO3C,cACzBC,MAAOhH,EAAG0J,OAAO1C,MACjBE,QAAS,SAAAmB,GAAK,OAAI,EAAKc,eAAed,EAAOrI,EAAGyJ,KAChD/C,SAAU1G,EAAG0J,OAAO7B,MACpBlB,eAAgB3G,EAAG0J,OAAOhC,WAC1Bd,QAAS5G,EAAG0J,OAAO9C,aAGzB,kBAAC7E,GAAD,CAAQC,QAAQ,UAAUtB,UAAWxC,KAAKL,MAAMsK,aAAhD,UAQN,OAHIjK,KAAK/C,MAAM0O,UACZF,EAAO,kBAACpH,GAAD,OAGP,yBAAKnH,UAAWC,KAAOiM,aACpB,uDACCqC,O,GAhLavL,aAuMXC,gBAjBS,SAAAR,GACrB,MAAO,CACJoH,KAAMpH,EAAM0H,cAAchG,YAC1ByB,MAAOnD,EAAM0H,cAAcC,WAC3BqE,QAAShM,EAAM8K,MAAMkB,QACrBf,MAAOjL,EAAMS,KAAKC,QAClBqF,OAAQ/F,EAAMS,KAAKsF,WAIE,SAAAM,GACxB,MAAO,CACJ2E,cAAe,SAACD,EAAWE,GAAZ,OACZ5E,EHvLqB,SAAC0E,EAAWE,GACvC,OAAO,SAAA5E,GACJA,EAPI,CACJxF,KHb+B,0BGoB/BiE,GACImH,KAAK,qBAAuBhB,EAAOF,GACnChD,MAAK,SAAAvC,GACHa,EA3ByB,SAACuF,EAAIb,GACvC,MAAO,CACJlK,KHGiC,0BGFjCqL,QAASN,EACTb,UAAWA,GAuBIoB,CAAsB3G,EAAIwC,KAAK2B,KAAMoB,OAEhD9C,OAAM,SAAAlD,GAAK,OAAIsB,EArBS,SAAAtB,GAC/B,MAAO,CACJlE,KHJ8B,uBGK9BkE,MAAOA,GAkBqBqH,CAAmBrH,QG+KnCoD,CAAuB4C,EAAWE,QAIrCzK,CAGboE,GAAiB6E,GAAa3E,KChN1BuH,G,4MACHC,sBAAwB,WACrB,EAAKhP,MAAMsJ,QAAQ2F,U,EAGtBC,wBAA0B,WACvB,EAAKlP,MAAMsJ,QAAQ6F,QAAQ,2B,uDAI3B,IAAIC,EAAU,kBAAC,IAAD,CAAUzO,GAAG,MAC3B,GAAIoC,KAAK/C,MAAM8J,KAAM,CAClB,IAAMuF,EAAYtM,KAAK/C,MAAMqP,UAAY,kBAAC,IAAD,CAAU1O,GAAG,MAAS,KAC/DyO,EACG,6BACIC,EACD,kBAACvE,GAAD,CACG1G,YAAarB,KAAK/C,MAAM8J,KACxBmB,eAAgBlI,KAAKiM,sBACrB9D,iBAAkBnI,KAAKmM,0BAE1B,kBAAC,IAAD,CACGhG,KAAI,UAAKnG,KAAK/C,MAAMsP,MAAMpG,KAAtB,iBACJqG,UAAWpD,MAKvB,OAAOiD,M,GA5BUnM,aAuCRC,gBAPS,SAAAR,GACrB,MAAO,CACJoH,KAAMpH,EAAM0H,cAAchG,YAC1BiL,UAAW3M,EAAM8K,MAAM6B,aAIW,KAAzBnM,CAA+B6L,I,oBC1C/B,SAASS,GAAMxP,GAC3B,IAAMoE,EAAc,GACpB,IAAK,IAAImG,KAAkBvK,EAAMoE,YAC9BA,EAAYmF,KAAK,CACd8C,KAAM9B,EACNkF,OAAQzP,EAAMoE,YAAYmG,KAIhC,IAAMmF,EAAqBtL,EAAYC,KAAI,SAAAsL,GACxC,OACG,uBAAG1P,UAAWC,KAAO0P,WAAYlL,IAAKiL,EAAItD,MACtCsD,EAAItD,KADR,KACgBsD,EAAIF,WAK1B,OACG,yBAAKxP,UAAWC,KAAOsP,OACpB,4CACCE,EACD,qCACU,gCAAS1P,EAAM6F,MAAf,U,IChBbgK,G,kLAEA9M,KAAK/C,MAAM8P,cAAc/M,KAAK/C,MAAM2N,MAAO5K,KAAK/C,MAAMyI,U,+BAItD,IAAIsH,EAAS,kBAAC3I,GAAD,MAYb,OAXKrE,KAAK/C,MAAM0O,UACbqB,EAAShN,KAAK/C,MAAM+P,OAAO1L,KAAI,SAAAmJ,GAC5B,OACG,kBAACgC,GAAD,CACG9K,IAAK8I,EAAMc,GACXlK,YAAaoJ,EAAMpJ,YACnByB,MAAO2H,EAAM3H,YAKlB,6BAAMkK,O,GAlBE9M,aAsCNC,gBAhBS,SAAAR,GACrB,MAAO,CACJqN,OAAQrN,EAAM8K,MAAMuC,OACpBrB,QAAShM,EAAM8K,MAAMkB,QACrBf,MAAOjL,EAAMS,KAAKC,QAClBqF,OAAQ/F,EAAMS,KAAKsF,WAIE,SAAAM,GACxB,MAAO,CACJ+G,cAAe,SAACnC,EAAOlF,GAAR,OACZM,ENmBkB,SAAC4E,EAAOlF,GAChC,OAAO,SAAAM,GACJA,EAPI,CACJxF,KH7C4B,uBGoD5B,IAAMyM,EAAW,gBAAYrC,EAAZ,sCAA+ClF,EAA/C,KACjBjB,GACIgD,IADJ,sBACuBwF,IACnBvF,MAAK,SAAAvC,GACH,IAAM+H,EAAgB,GACtB,IAAK,IAAIvL,KAAOwD,EAAIwC,KACjBuF,EAAc1G,KAAd,2BAAwBrB,EAAIwC,KAAKhG,IAAjC,IAAuC4J,GAAI5J,KAG9CqE,EA/BF,CACJxF,KH9B8B,uBG+B9BwM,OA6BkCE,OAE9BtF,OAAM,SAAAC,GACJ7B,EA3BF,CACJxF,KHpC2B,oBGqC3BkE,MAyB+BmD,QMlCnBC,CAAoB8C,EAAOlF,QAI9BvF,CAGboE,GAAiBuI,GAAQrI,K,6BCxCrB0I,G,4MACHxN,MAAQ,CACLgD,SAAU,CACPoH,MAAO,CACJnB,YAAa,QACbC,cAAe,CACZrI,KAAM,QACN+I,YAAa,gBAEhBT,MAAO,GACPU,WAAY,CACTC,UAAU,EACV2D,SAAS,GAEZzD,OAAO,EACPjB,SAAS,GAEZ2E,SAAU,CACPzE,YAAa,QACbC,cAAe,CACZrI,KAAM,WACN+I,YAAa,YAEhBT,MAAO,GACPU,WAAY,CACTC,UAAU,EACVC,UAAW,GAEdC,OAAO,EACPjB,SAAS,IAGfuB,aAAa,EACbqD,UAAU,G,EASbC,cAAgB,SAACzE,EAAO0E,GACrB,IAAIzC,GAAU,EASd,GARIyC,EAAK/D,WACNsB,EAA2B,KAAjBjC,EAAMkC,QAAiBD,GAGhCyC,EAAK9D,YACNqB,EAAUjC,EAAM9G,QAAUwL,EAAK9D,WAAaqB,GAG3CyC,EAAKJ,QAAS,CAEfrC,EADgB,yJACE0C,KAAK3E,IAAUiC,EAGpC,OAAOA,G,EAGV2C,oBAAsB,SAACrF,EAAc8B,GAClC,IAAMwD,EAAe,2BACf,EAAKhO,MAAMgD,UADI,mBAEjB0F,EAFiB,2BAGZ,EAAK1I,MAAMgD,SAAS0F,IAHR,IAIfS,MAAOqB,EAAMkB,OAAOvC,MACpBa,MAAO,EAAK4D,cACTpD,EAAMkB,OAAOvC,MACb,EAAKnJ,MAAMgD,SAAS0F,GAAcmB,YAErCd,SAAS,MAIXuB,GAAc,EAClB,IAAK,IAAI2D,KAAWD,EACjB1D,EAAc0D,EAAgBC,GAASjE,OAASM,EAGnD,EAAKnK,SAAS,CAAE6C,SAAUgL,EAAiB1D,YAAaA,K,EAG3D4D,cAAgB,SAAA1D,GACbA,EAAMC,iBACN,EAAKnN,MAAM6Q,OACR,EAAKnO,MAAMgD,SAASoH,MAAMjB,MAC1B,EAAKnJ,MAAMgD,SAAS0K,SAASvE,MAC7B,EAAKnJ,MAAM2N,W,EAIjBS,sBAAwB,WACrB,EAAKjO,UAAS,SAAAC,GACX,MAAO,CAAEuN,UAAWvN,EAAUuN,c,kEAxD5BtN,KAAK/C,MAAM+Q,gBAAkD,MAAhChO,KAAK/C,MAAMgR,kBAC1CjO,KAAK/C,MAAMqJ,0B,+BA2DP,IAAD,OACAgF,EAAoB,GAC1B,IAAK,IAAI3J,KAAO3B,KAAKL,MAAMgD,SACxB2I,EAAkB9E,KAAK,CACpB+E,GAAI5J,EACJ6J,OAAQxL,KAAKL,MAAMgD,SAAShB,KAGlC,IAAI8J,EAAOH,EAAkBhK,KAAI,SAAA4M,GAAW,OACzC,kBAAC9F,GAAD,CACGzG,IAAKuM,EAAY3C,GACjB3C,YAAasF,EAAY1C,OAAO5C,YAChCC,cAAeqF,EAAY1C,OAAO3C,cAClCC,MAAOoF,EAAY1C,OAAO1C,MAC1BN,SAAU0F,EAAY1C,OAAO7B,MAC7BlB,eAAgByF,EAAY1C,OAAOhC,WACnCd,QAASwF,EAAY1C,OAAO9C,QAC5BM,QAAS,SAAAkC,GAAC,OAAI,EAAKwC,oBAAoBQ,EAAY3C,GAAIL,SAIzDlL,KAAK/C,MAAM0O,UACZF,EAAO,kBAACpH,GAAD,OAGV,IAAI8J,EAAe,KACfnO,KAAK/C,MAAMyH,QACZyJ,EACG,uBAAG9Q,MAAO,CAAE+Q,MAAO,MAAOC,WAAY,SAClCrO,KAAK/C,MAAMyH,MAAMW,UAK3B,IAAIiJ,EAAe,KAMnB,OAJItO,KAAK/C,MAAMqB,kBACZgQ,EAAe,kBAAC,IAAD,CAAU1Q,GAAIoC,KAAK/C,MAAMgR,oBAIxC,yBAAK/Q,UAAWC,KAAOgQ,MACnBmB,EACAH,EACD,0BAAMzC,SAAU1L,KAAK6N,eACjBpC,EACD,kBAAC5H,GAAD,CAAQC,QAAQ,WAAhB,WAEH,kBAACD,GAAD,CAAQC,QAAQ,SAAS5F,QAAS8B,KAAK+N,uBACnC/N,KAAKL,MAAM2N,SAAW,oBAAsB,0B,GAlJzCpN,aA2KJC,gBAlBS,SAAAR,GACrB,MAAO,CACJgM,QAAShM,EAAMS,KAAKuL,QACpBjH,MAAO/E,EAAMS,KAAKsE,MAClBpG,gBAAwC,OAAvBqB,EAAMS,KAAKC,QAC5B2N,eAAgBrO,EAAM0H,cAAckH,SACpCN,iBAAkBtO,EAAMS,KAAK6N,qBAIR,SAAAjI,GACxB,MAAO,CACJ8H,OAAQ,SAAC/D,EAAOsD,EAAUC,GAAlB,OACLtH,EXtIW,SAAC+D,EAAOsD,EAAUC,GACnC,OAAO,SAAAtH,GACJA,EAxCI,CACJxF,KCaoB,eD2BpB,IAAMgO,EAAW,CACdzE,MAAOA,EACPsD,SAAUA,EACVoB,mBAAmB,GAElBC,EACD,wGACEpB,IACFoB,EACG,qHAGNjK,KACImH,KAAK8C,EAAKF,GACV9G,MAAK,SAAAvC,GACH,IAAMwJ,EAAiB,IAAIC,MACxB,IAAIA,MAAOC,UAAiC,IAArB1J,EAAIwC,KAAKmH,WAEnClJ,aAAamJ,QAAQ,QAAS5J,EAAIwC,KAAKtH,SACvCuF,aAAamJ,QAAQ,iBAAkBJ,GACvC/I,aAAamJ,QAAQ,SAAU5J,EAAIwC,KAAKqH,SACxChJ,EAASP,GAAYN,EAAIwC,KAAKtH,QAAS8E,EAAIwC,KAAKqH,UAChDhJ,EAASF,GAAiBX,EAAIwC,KAAKmH,eAErClH,OAAM,SAAAlD,GACJ/F,QAAQ+F,MAAMA,GACdsB,EAtDY,SAAAtB,GACrB,MAAO,CACJlE,KCCmB,YDAnBkE,MAAOA,GAmDQuK,CAASvK,EAAMQ,SAASyC,KAAKjD,YWyGhCoD,CAAaiC,EAAOsD,EAAUC,KAC1ChH,sBAAuB,kBAAMN,EAAS8B,GAA4B,UAIzD3H,CAA6CgN,IC/KtD+B,G,kLAEAlP,KAAK/C,MAAMkS,a,+BAIX,OAAO,kBAAC,IAAD,CAAUvR,GAAG,U,GANLsC,aAgBNC,eAAQ,MANI,SAAA6F,GACxB,MAAO,CACJmJ,SAAU,kBAAMnJ,EAAS8B,UAIhB3H,CAAkC+O,ICX3CE,G,kLAEApP,KAAK/C,MAAMoS,oB,+BAIX,IAAIC,EACD,kBAAC,IAAD,KACG,kBAAC,IAAD,CAAOnJ,KAAK,QAAQqG,UAAWW,KAC/B,kBAAC,IAAD,CAAOhH,KAAK,IAAIqG,UAAWpG,KAC3B,kBAAC,IAAD,CAAUxI,GAAG,OAiBnB,OAbIoC,KAAK/C,MAAMqB,kBACZgR,EACG,kBAAC,IAAD,KACG,kBAAC,IAAD,CAAOnJ,KAAK,YAAYqG,UAAWR,KACnC,kBAAC,IAAD,CAAO7F,KAAK,UAAUqG,UAAWM,KACjC,kBAAC,IAAD,CAAO3G,KAAK,QAAQqG,UAAWW,KAC/B,kBAAC,IAAD,CAAOhH,KAAK,UAAUqG,UAAW0C,KACjC,kBAAC,IAAD,CAAO/I,KAAK,IAAIqG,UAAWpG,OAOjC,6BACG,kBAAC,EAAD,KAASkJ,Q,GA7BHpP,aA+CHe,eAAWd,aAZF,SAAAR,GACrB,MAAO,CACJrB,gBAAwC,OAAvBqB,EAAMS,KAAKC,YAIP,SAAA2F,GACxB,MAAO,CACJqJ,gBAAiB,kBAAMrJ,Gb8BnB,SAAAA,GACJ,IAAM4E,EAAQhF,aAAa2J,QAAQ,SACnC,GAAK3E,EAEE,CACJ,IAAM+D,EAAiB,IAAIC,KACxBhJ,aAAa2J,QAAQ,mBAExB,GAAIZ,GAAkB,IAAIC,KACvB5I,EAASL,UACL,CACJ,IAAMD,EAASE,aAAa2J,QAAQ,UACpCvJ,EAASP,GAAYmF,EAAOlF,IAC5BM,EACGF,IACI6I,EAAeE,WAAY,IAAID,MAAOC,WAAa,YAZ7D7I,EAASL,aa7BQxF,CAA6CiP,KC1D1DI,GAAe,SAACC,EAAWC,GACrC,OAAO,2BACDD,GACAC,ICAHC,GAAe,CAClBtO,YAAa,KACbiG,WAAY,EACZ5C,OAAO,EACP6J,UAAU,GAGPqB,GAAoB,CACvBC,MAAO,GACPC,OAAQ,GACRC,MAAO,GACPC,KAAM,KAsBHC,GAAgB,SAACtQ,EAAOuQ,GAC3B,IAAMC,EAAoB,gBACtBD,EAAO1I,eAAiB7H,EAAM0B,YAAY6O,EAAO1I,gBAAkB,GAMjE4I,EAAiB,CACpB/O,YAL2BmO,GAC3B7P,EAAM0B,YACN8O,GAIA7I,WAAY3H,EAAM2H,WAAasI,GAAkBM,EAAO1I,gBACxD+G,UAAU,GAEb,OAAOiB,GAAa7P,EAAOyQ,IAGxBC,GAAmB,SAAC1Q,EAAOuQ,GAC9B,IAAMI,EAAoB,gBACtBJ,EAAO1I,eAAiB7H,EAAM0B,YAAY6O,EAAO1I,gBAAkB,GAMjE+I,EAAiB,CACpBlP,YAL2BmO,GAC3B7P,EAAM0B,YACNiP,GAIAhJ,WAAY3H,EAAM2H,WAAasI,GAAkBM,EAAO1I,gBACxD+G,UAAU,GAEb,OAAOiB,GAAa7P,EAAO4Q,IAGxBC,GAAiB,SAAC7Q,EAAOuQ,GAC5B,OAAOV,GAAa7P,EAAO,CACxB0B,YAAa6O,EAAO7O,YACpBqD,OAAO,EACP4C,WAAYqI,GAAarI,WACzBiH,UAAU,KAIVkC,GAAmB,SAAC9Q,EAAOuQ,GAC9B,OAAOV,GAAa7P,EAAO,CAAE+E,OAAO,KAGxBgM,GAhEC,WAAmC,IAAlC/Q,EAAiC,uDAAzBgQ,GAAcO,EAAW,uCAC/C,OAAQA,EAAO1P,MACZ,IdlBwB,iBcmBrB,OAAOyP,GAActQ,EAAOuQ,GAE/B,IdpB2B,oBcqBxB,OAAOG,GAAiB1Q,EAAOuQ,GAElC,IdtByB,kBcuBtB,OAAOM,GAAe7Q,EAAOuQ,GAEhC,IdxBkC,2BcyB/B,OAAOO,GAAiB9Q,EAAOuQ,GAElC,QACG,OAAOvQ,IC7BVgQ,GAAe,CAClB3C,OAAQ,GACRrB,SAAS,EACTW,WAAW,GA+BRqE,GAAe,SAAChR,EAAOuQ,GAC1B,OAAOV,GAAa7P,EAAO,CAAE2M,WAAW,KAGrCsE,GAAsB,SAACjR,EAAOuQ,GACjC,OAAOV,GAAa7P,EAAO,CAAEgM,SAAS,KAGnCG,GAAwB,SAACnM,EAAOuQ,GACnC,IAAMW,EAAWrB,GAAaU,EAAOxF,UAAW,CAC7Ca,GAAI2E,EAAOrE,UAEd,OAAO2D,GAAa7P,EAAO,CACxBgM,SAAS,EACTW,WAAW,EACXU,OAAQrN,EAAMqN,OAAOjL,OAAO8O,MAI5B9E,GAAqB,SAACpM,EAAOuQ,GAChC,OAAOV,GAAa7P,EAAO,CAAEgM,SAAS,KAGnCmF,GAAmB,SAACnR,EAAOuQ,GAC9B,OAAOV,GAAa7P,EAAO,CAAEgM,SAAS,KAGnCoF,GAAqB,SAACpR,EAAOuQ,GAChC,OAAOV,GAAa7P,EAAO,CAAEqN,OAAQkD,EAAOlD,OAAQrB,SAAS,KAG1DqF,GAAkB,SAACrR,EAAOuQ,GAC7B,OAAOV,GAAa7P,EAAO,CAAEgM,SAAS,KAG1B+E,GA/DC,WAAmC,IAAlC/Q,EAAiC,uDAAzBgQ,GAAcO,EAAW,uCAC/C,OAAQA,EAAO1P,MACZ,IfDuB,gBeEpB,OAAOmQ,GAAahR,EAAOuQ,GAE9B,IfP+B,wBeQ5B,OAAOU,GAAoBjR,EAAOuQ,GAErC,IfTiC,0BeU9B,OAAOpE,GAAsBnM,EAAOuQ,GAEvC,IfX8B,uBeY3B,OAAOnE,GAAmBpM,EAAOuQ,GAEpC,IfV4B,qBeWzB,OAAOY,GAAiBnR,EAAOuQ,GAElC,IfZ8B,uBea3B,OAAOa,GAAmBpR,EAAOuQ,GAEpC,Ifd2B,oBeexB,OAAOc,GAAgBrR,EAAOuQ,GAEjC,QACG,OAAOvQ,IC9BVgQ,GAAe,CAClBtP,QAAS,KACTqF,OAAQ,KACRhB,MAAO,KACPiH,SAAS,EACTsC,iBAAkB,KAoBf/H,GAAsB,SAACvG,EAAOuQ,GACjC,OAAOV,GAAa7P,EAAO,CAAEsO,iBAAkBiC,EAAO/J,QAGnD8K,GAAY,SAACtR,EAAOuQ,GACvB,OAAOV,GAAa7P,EAAO,CAAE+E,MAAO,KAAMiH,SAAS,KAGhDlG,GAAc,SAAC9F,EAAOuQ,GACzB,OAAOV,GAAa7P,EAAO,CACxBU,QAAS6P,EAAO7P,QAChBqF,OAAQwK,EAAOxK,OACfhB,MAAO,KACPiH,SAAS,KAITsD,GAAW,SAACtP,EAAOuQ,GACtB,OAAOV,GAAa7P,EAAO,CACxB+E,MAAOwL,EAAOxL,MACdiH,SAAS,KAITuF,GAAc,SAACvR,EAAOuQ,GACzB,OAAOV,GAAa7P,EAAO,CACxBU,QAAS,KACTqF,OAAQ,QAICgL,GAhDC,WAAmC,IAAlC/Q,EAAiC,uDAAzBgQ,GAAcO,EAAW,uCAC/C,OAAQA,EAAO1P,MACZ,IhBKoB,agBJjB,OAAOyQ,GAAUtR,EAAOuQ,GAC3B,IhBIsB,egBHnB,OAAOzK,GAAY9F,EAAOuQ,GAC7B,IhBGmB,YgBFhB,OAAOjB,GAAStP,EAAOuQ,GAC1B,IhBEsB,egBDnB,OAAOgB,GAAYvR,EAAOuQ,GAC7B,IhBCgC,yBgBA7B,OAAOhK,GAAoBvG,EAAOuQ,GACrC,QACG,OAAOvQ,ICXVwR,I,MAAmBC,OAAOC,sCAAwCC,KAElEC,GAAcC,YAAgB,CACjCnK,cAAeoK,GACfhH,MAAOiH,GACPtR,KAAMuR,KAGHC,GAAQC,YACXN,GACAJ,GAAiBW,YAAgBC,OAG9BC,GACH,kBAAC,IAAD,CAAUJ,MAAOA,IACd,kBAAC,IAAD,KACG,kBAAC,GAAD,QAKTK,IAASC,OACN,kBAAC,IAAMC,WAAP,KAAmBH,IACnBI,SAASC,eAAe,W","file":"static/js/main.e4bf63cd.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"BreadBottom\":\"BurgerIngredients_BreadBottom__1DT1u\",\"BreadTop\":\"BurgerIngredients_BreadTop__eOTWl\",\"Seeds1\":\"BurgerIngredients_Seeds1__3yLlf\",\"Seeds2\":\"BurgerIngredients_Seeds2__r5YBB\",\"Meat\":\"BurgerIngredients_Meat__1Xp_Y\",\"Cheese\":\"BurgerIngredients_Cheese__1iGyO\",\"Salad\":\"BurgerIngredients_Salad__rGd13\",\"Bacon\":\"BurgerIngredients_Bacon__DQUN5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SideDrawer\":\"SideDrawer_SideDrawer__19PSs\",\"Open\":\"SideDrawer_Open__39m1O\",\"Close\":\"SideDrawer_Close__3Fe3Z\",\"Logo\":\"SideDrawer_Logo__2s-dM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildController\":\"BuildController_BuildController__3p_-8\",\"Label\":\"BuildController_Label__5q6Q4\",\"Less\":\"BuildController_Less__3y70p\",\"More\":\"BuildController_More__384m9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Input_Input__3Ae6n\",\"Label\":\"Input_Label__3OjVu\",\"InputElement\":\"Input_InputElement__33HE8\",\"Invalid\":\"Input_Invalid__1lS-0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Toolbar\":\"Toolbar_Toolbar__2j63Q\",\"Logo\":\"Toolbar_Logo__3vuwJ\",\"DesktopOnly\":\"Toolbar_DesktopOnly__1WHlr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItem\":\"NavigationItem_NavigationItem__zK5Xj\",\"active\":\"NavigationItem_active__oSIOr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControls\":\"BuildControls_BuildControls__wgeGn\",\"OrderButton\":\"BuildControls_OrderButton__Kdus2\",\"enable\":\"BuildControls_enable__3eE8d\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__2qtSx\",\"Success\":\"Button_Success__TWZwq\",\"Danger\":\"Button_Danger__D9msE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Order\":\"Order_Order__vCzU_\",\"Ingredient\":\"Order_Ingredient__1TgvX\"};","module.exports = __webpack_public_path__ + \"static/media/logo.b8503d26.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Logo\":\"Logo_Logo__1UexQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItems\":\"NavigationItems_NavigationItems__vEhzz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Menu\":\"DrawerToggle_Menu__ZsIKn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Content\":\"Layout_Content__2hscb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"Backdrop_Backdrop__gTDNW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Burger\":\"Burger_Burger__2WRIx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Modal\":\"Modal_Modal__2FyTn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Loader\":\"Spinner_Loader__3z2OE\",\"load6\":\"Spinner_load6__1PRYt\",\"round\":\"Spinner_round__2p9Yf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CheckoutSummary\":\"CheckoutSummary_CheckoutSummary__RLre-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactData\":\"ContactData_ContactData__2Ykf3\",\"Input\":\"ContactData_Input__GJIUz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Auth\":\"Auth_Auth__212z-\",\"Input\":\"Auth_Input__3h-O-\",\"ContactData\":\"Auth_ContactData__2XPRm\"};","import React from \"react\";\r\nimport burgerLogo from \"../../assets/images/logo.png\";\r\nimport styles from \"../../styles/Logo.module.css\";\r\n\r\nconst logo = props => {\r\n   return (\r\n      <div className={styles.Logo} style={{height: props.height}}>\r\n         <img src={burgerLogo} alt=\"\" />\r\n      </div>\r\n   );\r\n};\r\n\r\nexport default logo;\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport styles from \"../../../styles/NavigationItem.module.css\";\r\n\r\nconst navigationItem = props => {\r\n   return (\r\n      <li className={styles.NavigationItem}>\r\n         <NavLink\r\n            to={props.link}\r\n            exact\r\n            activeClassName={styles.active}\r\n            onClick={props.clicked}\r\n         >\r\n            {props.children}\r\n         </NavLink>\r\n      </li>\r\n   );\r\n};\r\n\r\nexport default navigationItem;\r\n","import React from \"react\";\r\nimport NavigationItem from \"./NavigationItem\";\r\nimport styles from \"../../../styles/NavigationItems.module.css\";\r\n\r\nconst navigationItems = props => {\r\n   return (\r\n      <ul className={styles.NavigationItems}>\r\n         <NavigationItem link=\"/\" clicked={props.clicked}>\r\n            Burger Builder\r\n         </NavigationItem>\r\n         {props.isAuthenticated ? (\r\n            <NavigationItem link=\"/orders\" clicked={props.clicked}>\r\n               Orders\r\n            </NavigationItem>\r\n         ) : null}\r\n         {!props.isAuthenticated ? (\r\n            <NavigationItem link=\"/auth\" clicked={props.clicked}>\r\n               Authentication\r\n            </NavigationItem>\r\n         ) : (\r\n            <NavigationItem link=\"/logout\" clicked={props.clicked}>\r\n               Logout\r\n            </NavigationItem>\r\n         )}\r\n      </ul>\r\n   );\r\n};\r\n\r\nexport default navigationItems;\r\n","import React from \"react\";\r\nimport styles from \"../../../styles/DrawerToggle.module.css\";\r\n\r\nexport default function DrawerToggle(props) {\r\n   return (\r\n      <div className={styles.Menu} onClick={props.click}>\r\n         <div></div>\r\n         <div></div>\r\n         <div></div>\r\n      </div>\r\n   );\r\n}\r\n","import React from \"react\";\r\nimport Logo from \"../../Logo/Logo\";\r\nimport NavigationItems from \"../NavigationItems/NavigationItems\";\r\nimport DrawerToggle from \"../SideDrawer/DrawerToggle\";\r\nimport styles from \"../../../styles/Toolbar.module.css\";\r\n\r\nconst toolbar = props => {\r\n    console.log(props.isAuth);\r\n    \r\n   return (\r\n      <header className={styles.Toolbar}>\r\n         <DrawerToggle click={props.open} />\r\n         <div className={styles.Logo}>\r\n            <Logo />\r\n         </div>\r\n         <nav className={styles.DesktopOnly}>\r\n            <NavigationItems isAuthenticated={props.isAuth} />\r\n         </nav>\r\n      </header>\r\n   );\r\n};\r\n\r\nexport default toolbar;\r\n","import React from \"react\";\r\nimport styles from \"../../../styles/Backdrop.module.css\";\r\n\r\nconst backdrop = props => {\r\n   return props.show ? (\r\n      <div className={styles.Backdrop} onClick={props.clicked}></div>\r\n   ) : null;\r\n};\r\n\r\nexport default backdrop;\r\n","import React from \"react\";\r\nimport Logo from \"../../Logo/Logo\";\r\nimport NavigationItems from \"../NavigationItems/NavigationItems\";\r\nimport Backdrop from \"../../UI/Backdrop/Backdrop\";\r\nimport styles from \"../../../styles/SideDrawer.module.css\";\r\n\r\nexport default function SideDrawer(props) {\r\n   let attachedClasses = [styles.SideDrawer, styles.Close];\r\n   if (props.open) {\r\n      attachedClasses = [styles.SideDrawer, styles.Open];\r\n   }\r\n\r\n   return (\r\n      <>\r\n         <Backdrop show={props.open} clicked={props.closed} />\r\n         <div className={attachedClasses.join(\" \")}>\r\n            <div className={styles.Logo}>\r\n               <Logo />\r\n            </div>\r\n            <nav>\r\n               <NavigationItems\r\n                  isAuthenticated={props.isAuth}\r\n                  clicked={props.closed}\r\n               />\r\n            </nav>\r\n         </div>\r\n      </>\r\n   );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Toolbar from \"../../components/Navigation/Toolbar/Toolbar\";\r\nimport styles from \"../../styles/Layout.module.css\";\r\nimport SideDrawer from \"../Navigation/SideDrawer/SideDrawer\";\r\n\r\nclass Layout extends Component {\r\n   state = {\r\n      showSideDrawer: false,\r\n   };\r\n\r\n   sideDrawerClosedHandle = () => {\r\n      this.setState(prevState => {\r\n         return { showSideDrawer: !prevState.showSideDrawer };\r\n      });\r\n   };\r\n\r\n   render() {\r\n      return (\r\n         <>\r\n            <Toolbar\r\n               open={this.sideDrawerClosedHandle}\r\n               isAuth={this.props.isAuthenticated}\r\n            />\r\n            <SideDrawer\r\n               closed={this.sideDrawerClosedHandle}\r\n               open={this.state.showSideDrawer}\r\n               isAuth={this.props.isAuthenticated}\r\n            />\r\n            <main className={styles.Content}>{this.props.children}</main>\r\n         </>\r\n      );\r\n   }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n   return {\r\n      isAuthenticated: state.auth.idToken !== null,\r\n   };\r\n};\r\n\r\nexport default connect(mapStateToProps, null)(Layout);\r\n","import React from \"react\";\r\nimport propTypes from \"prop-types\";\r\nimport styles from \"../../../styles/BurgerIngredients.module.css\";\r\n\r\nconst burgerIngredient = props => {\r\n   let ingredient = null;\r\n\r\n   switch (props.type) {\r\n      case \"bread-bottom\":\r\n         ingredient = <div className={styles.BreadBottom}></div>;\r\n         break;\r\n      case \"bread-top\":\r\n         ingredient = (\r\n            <div className={styles.BreadTop}>\r\n               <div className={styles.Seeds1}></div>\r\n               <div className={styles.Seeds2}></div>\r\n            </div>\r\n         );\r\n         break;\r\n      case \"meat\":\r\n         ingredient = <div className={styles.Meat}></div>;\r\n         break;\r\n      case \"cheese\":\r\n         ingredient = <div className={styles.Cheese}></div>;\r\n         break;\r\n      case \"salad\":\r\n         ingredient = <div className={styles.Salad}></div>;\r\n         break;\r\n      case \"bacon\":\r\n         ingredient = <div className={styles.Bacon}></div>;\r\n         break;\r\n      default:\r\n         ingredient = null;\r\n   }\r\n\r\n   return ingredient;\r\n};\r\n\r\nburgerIngredient.propTypes = {\r\n   type: propTypes.string,\r\n};\r\n\r\nexport default burgerIngredient;\r\n","import React from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport styles from \"../../styles/Burger.module.css\";\r\nimport BurgerIngredient from \"./BurgerIngredients/BurgerIngredients\";\r\n\r\nconst burger = props => {\r\n   let transformedIngredients = Object.keys(props.ingredients)\r\n      .map(igKey => {\r\n         return [...Array(props.ingredients[igKey])].map((_, i) => {\r\n            return <BurgerIngredient key={igKey + i} type={igKey} />;\r\n         });\r\n      })\r\n      .reduce((arr, el) => {\r\n         return arr.concat(el);\r\n      }, []);\r\n   if (transformedIngredients.length === 0) {\r\n      transformedIngredients = <p>Please start adding ingredients</p>;\r\n   }\r\n   return (\r\n      <div className={styles.Burger}>\r\n         <BurgerIngredient type=\"bread-top\" />\r\n         {transformedIngredients}\r\n         <BurgerIngredient type=\"bread-bottom\" />\r\n      </div>\r\n   );\r\n};\r\n\r\nexport default withRouter(burger);\r\n","import React from \"react\";\r\nimport styles from \"../../../styles/BuildController.module.css\";\r\n\r\nconst buildController = props => {\r\n   return (\r\n      <div className={styles.BuildController}>\r\n         <div className={styles.Label}>\r\n             {props.label}\r\n             </div>\r\n         <button\r\n            className={styles.Less}\r\n            onClick={props.removed}\r\n            disabled={props.disabled}\r\n         >\r\n            Less\r\n         </button>\r\n         <button className={styles.More} onClick={props.added} >\r\n            More\r\n         </button>\r\n      </div>\r\n   );\r\n};\r\n\r\nexport default buildController;\r\n","import React from \"react\";\r\n\r\nimport styles from \"../../../styles/BuildControls.module.css\";\r\nimport BuildController from \"./BuildController\";\r\n\r\nconst controls = [\r\n   { label: \"Salad\", type: \"salad\" },\r\n   { label: \"Bacon\", type: \"bacon\" },\r\n   { label: \"Cheese\", type: \"cheese\" },\r\n   { label: \"Meat\", type: \"meat\" },\r\n];\r\n\r\nconst buildControls = props => {\r\n   return (\r\n      <div className={styles.BuildControls}>\r\n         <p>\r\n            Current Price: <strong>{props.price.toFixed(2)}</strong>\r\n         </p>\r\n         {controls.map(ctrl => {\r\n            return (\r\n               <BuildController\r\n                  key={ctrl.label}\r\n                  label={ctrl.label}\r\n                  added={() => props.ingredientAdded(ctrl.type)}\r\n                  removed={() => props.ingredientRemoved(ctrl.type)}\r\n                  disabled={props.disabled[ctrl.type]}\r\n                  ingredients={props.ingredients}\r\n               />\r\n            );\r\n         })}\r\n         <button\r\n            className={styles.OrderButton}\r\n            disabled={!props.purchasable}\r\n            onClick={props.purchasing}\r\n         >\r\n            {props.isAuth ? 'ORDER NOW' : 'SIGN UP TO ORDER'}\r\n         </button>\r\n      </div>\r\n   );\r\n};\r\n\r\nexport default buildControls;\r\n","import React, { Component } from \"react\";\r\nimport Backdrop from \"../Backdrop/Backdrop\";\r\nimport styles from \"../../../styles/Modal.module.css\";\r\n\r\nclass Modal extends Component {\r\n   shouldComponentUpdate(nextProps, nextState) {\r\n      return nextProps.show !== this.props.show || nextProps.children !== this.props.children;\r\n   }\r\n\r\n   render() {\r\n      return (\r\n         <>\r\n            <Backdrop show={this.props.show} clicked={this.props.modalClosed} />\r\n            <div\r\n               className={styles.Modal}\r\n               style={{\r\n                  transform: this.props.show\r\n                     ? \"translateY(0)\"\r\n                     : \"translateY(-100vh)\",\r\n                  opacity: this.props.show ? \"1\" : \"0\",\r\n               }}\r\n            >\r\n               {this.props.children}\r\n            </div>\r\n         </>\r\n      );\r\n   }\r\n}\r\nexport default Modal;\r\n","import React from \"react\";\r\nimport styles from \"../../../styles/Button.module.css\";\r\n\r\nconst button = props => {\r\n   return (\r\n      <button\r\n         className={[styles.Button, styles[props.btnType]].join(\" \")}\r\n         onClick={props.clicked}\r\n         disabled={props.disabled}\r\n      >\r\n         {props.children}\r\n      </button>\r\n   );\r\n};\r\n\r\nexport default button;\r\n","import React, { Component } from \"react\";\r\nimport Button from \"../../UI/Button/Button\";\r\n\r\nclass OrderSummary extends Component {\r\n   componentWillUpdate() {\r\n      console.log(\"[OrderSummary will update]\");\r\n   }\r\n\r\n   render() {\r\n      const ingredientSummary = Object.keys(this.props.ingredients).map(\r\n         igKey => {\r\n            return (\r\n               <li key={igKey}>\r\n                  <span style={{ textTransform: \"capitalize\" }}>{igKey}</span>:\r\n                  {this.props.ingredients[igKey]}\r\n               </li>\r\n            );\r\n         }\r\n      );\r\n\r\n      return (\r\n         <React.Fragment>\r\n            <h3>Yuor Order</h3>\r\n            <p>Burger with following ingredients:</p>\r\n            <ul>{ingredientSummary}</ul>\r\n            <p>\r\n               <strong>Total Price: {this.props.price.toFixed(2)}</strong>\r\n            </p>\r\n            <p>Continue to checkout?</p>\r\n            <Button btnType=\"Danger\" clicked={this.props.purchaseCancelled}>\r\n               CANCEL\r\n            </Button>\r\n            <Button btnType=\"Success\" clicked={this.props.purchaseContinued}>\r\n               CONTINUE\r\n            </Button>\r\n         </React.Fragment>\r\n      );\r\n   }\r\n}\r\n\r\nexport default OrderSummary;\r\n","import React from \"react\";\r\nimport styles from \"../../../styles/Spinner.module.css\";\r\n\r\nexport default function Spinner() {\r\n   return <div className={styles.Loader}>Loading...</div>;\r\n}\r\n","import React, { Component } from \"react\";\r\nimport Modal from \"../components/UI/Modal/Modal\";\r\n\r\nconst withErrorHandler = (WrappedComponent, axios) => {\r\n   return class extends Component {\r\n      state = {\r\n         error: null,\r\n      };\r\n\r\n      componentWillMount() {\r\n         this.reqInterceptor = axios.interceptors.request.use(req => {\r\n            this.setState({ error: null });\r\n            return req;\r\n         });\r\n         this.resInterceptor = axios.interceptors.response.use(\r\n            res => res,\r\n            error => {\r\n               this.setState({ error: error });\r\n            }\r\n         );\r\n      }\r\n\r\n      componentWillUnmount(){   \r\n        axios.interceptors.request.eject(this.reqInterceptor);\r\n        axios.interceptors.response.eject(this.resInterceptor);\r\n      }\r\n\r\n      errorConfirmedHandler = () => {\r\n         this.setState({ error: null });\r\n      };\r\n\r\n      render() {\r\n         return (\r\n            <>\r\n               <Modal\r\n                  show={this.state.error}\r\n                  modalClosed={this.errorConfirmedHandler}\r\n               >\r\n                  {this.state.error ? this.state.error.message : null}\r\n               </Modal>\r\n\r\n               <WrappedComponent {...this.props} />\r\n            </>\r\n            \r\n         );\r\n      }\r\n   };\r\n};\r\n\r\nexport default withErrorHandler;\r\n","import axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n   baseURL: \"https://my-burger-react-58764.firebaseio.com/\",\r\n});\r\n\r\nexport default instance;\r\n","import * as actionTypes from \"./actionTypes\";\r\nimport axios from \"axios\";\r\n\r\nexport const authStart = () => {\r\n   return {\r\n      type: actionTypes.AUTH_START,\r\n   };\r\n};\r\n\r\nexport const authSuccess = (idToken, userId) => {\r\n   return {\r\n      type: actionTypes.AUTH_SUCCESS,\r\n      idToken: idToken,\r\n      userId: userId,\r\n   };\r\n};\r\n\r\nexport const authFail = error => {\r\n   return {\r\n      type: actionTypes.AUTH_FAIL,\r\n      error: error,\r\n   };\r\n};\r\n\r\nexport const signOut = () => {\r\n   localStorage.removeItem(\"token\");\r\n   localStorage.removeItem(\"expirationDate\");\r\n   localStorage.removeItem(\"userId\");\r\n\r\n   return {\r\n      type: actionTypes.AUTH_SIGNOUT,\r\n   };\r\n};\r\n\r\nexport const checkAuthTimeout = expTime => {\r\n   return dispatch => {\r\n      setTimeout(() => {\r\n         dispatch(signOut());\r\n      }, expTime * 1000);\r\n   };\r\n};\r\n\r\nexport const auth = (email, password, isSignup) => {\r\n   return dispatch => {\r\n      dispatch(authStart());\r\n      const authData = {\r\n         email: email,\r\n         password: password,\r\n         returnSecureToken: true,\r\n      };\r\n      let url =\r\n         \"https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyCLRnPWar7LCD-nuNJOHPnAccG1hVGC-Ns\";\r\n      if (!isSignup) {\r\n         url =\r\n            \"https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyCLRnPWar7LCD-nuNJOHPnAccG1hVGC-Ns\";\r\n      }\r\n\r\n      axios\r\n         .post(url, authData)\r\n         .then(res => {\r\n            const expirationDate = new Date(\r\n               new Date().getTime() + res.data.expiresIn * 1000\r\n            );\r\n            localStorage.setItem(\"token\", res.data.idToken);\r\n            localStorage.setItem(\"expirationDate\", expirationDate);\r\n            localStorage.setItem(\"userId\", res.data.localId);\r\n            dispatch(authSuccess(res.data.idToken, res.data.localId));\r\n            dispatch(checkAuthTimeout(res.data.expiresIn));\r\n         })\r\n         .catch(error => {\r\n            console.error(error);\r\n            dispatch(authFail(error.response.data.error));\r\n         });\r\n   };\r\n};\r\n\r\nexport const setAuthRedirectPath = path => {\r\n   return {\r\n      type: actionTypes.SET_AUTH_REDIRECT_PATH,\r\n      path: path,\r\n   };\r\n};\r\n\r\nexport const authCheckState = () => {\r\n   return dispatch => {\r\n      const token = localStorage.getItem(\"token\");\r\n      if (!token) {\r\n         dispatch(signOut());\r\n      } else {\r\n         const expirationDate = new Date(\r\n            localStorage.getItem(\"expirationDate\")\r\n         );\r\n         if (expirationDate <= new Date()) {\r\n            dispatch(signOut());\r\n         } else {\r\n            const userId = localStorage.getItem(\"userId\");\r\n            dispatch(authSuccess(token, userId));\r\n            dispatch(\r\n               checkAuthTimeout(\r\n                  (expirationDate.getTime() - new Date().getTime()) / 1000\r\n               )\r\n            );\r\n         }\r\n      }\r\n   };\r\n};\r\n","// burger builder\r\nexport const ADD_INGREDIENT = \"ADD_INGREDIENT\";\r\nexport const REMOVE_INGREDIENT = \"REMOVE_INGREDIENT\";\r\nexport const SET_INGREDIENTS = \"SET_INGREDIENTS\";\r\nexport const FETCH_INGREDIENTS_FAILED = \"FETCH_INGREDIENTS_FAILED\";\r\n\r\n// checkout / contact data\r\nexport const PURCHASE_BURGER_START = \"PURCHASE_BURGER_START\";\r\nexport const PURCHASE_BURGER_SUCCESS = \"PURCHASE_BURGER_SUCCESS\";\r\nexport const PURCHASE_BURGER_FAIL = \"PURCHASE_BURGER_FAIL\";\r\nexport const PURCHASE_INIT = \"PURCHASE_INIT\";\r\n\r\n// orders\r\nexport const FETCH_ORDERS_START = \"FETCH_ORDERS_START\";\r\nexport const FETCH_ORDERS_SUCCESS = \"FETCH_ORDERS_SUCCESS\";\r\nexport const FETCH_ORDERS_FAIL = \"FETCH_ORDERS_FAIL\";\r\n\r\n//authentication\r\nexport const AUTH_START = \"AUTH_START\";\r\nexport const AUTH_SUCCESS = \"AUTH_SUCCESS\";\r\nexport const AUTH_FAIL = \"AUTH_FAIL\";\r\nexport const AUTH_SIGNOUT = \"AUTH_SIGNOUT\";\r\nexport const SET_AUTH_REDIRECT_PATH = \"SET_AUTH_REDIRECT_PATH\";\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport Burger from \"../../components/Burger/Burger\";\r\nimport BuildControls from \"../../components/Burger/BuildControls/BuildControls\";\r\nimport Modal from \"../../components/UI/Modal/Modal\";\r\nimport OrderSummary from \"../../components/Burger/OrderSummary/OrderSummary\";\r\nimport Spinner from \"../../components/UI/Spinner/Spinner\";\r\nimport withErrorHandler from \"../../hoc/withErrorHandler\";\r\nimport * as actions from \"../../store/actions/index\";\r\n\r\nimport axios from \"../../axios-orders\";\r\n\r\nclass BurgerBuilder extends Component {\r\n   state = {\r\n      purchasing: false,\r\n   };\r\n\r\n   componentDidMount() {\r\n      this.props.onInitIngredients();\r\n   }\r\n\r\n   updatePurchaseState(ingredients) {\r\n      const sum = Object.keys(ingredients)\r\n         .map(igKey => {\r\n            return ingredients[igKey];\r\n         })\r\n         .reduce((sum, el) => {\r\n            return sum + el;\r\n         }, 0);\r\n      return sum > 0;\r\n   }\r\n\r\n   purchaseHandler = () => {\r\n      if (this.props.isAuthenticated) {\r\n         this.setState({ purchasing: true });\r\n      } else {\r\n         this.props.onSetAuthRedirectPath(\"/checkout\");\r\n         this.props.history.push(\"/auth\");\r\n      }\r\n   };\r\n\r\n   purchaseCancelHandler = () => {\r\n      this.setState({ purchasing: false });\r\n   };\r\n\r\n   purchaseContinueHandler = () => {\r\n      //   alert(\"You continue!!!\");\r\n      this.props.onInitPurchased();\r\n      this.props.history.push(\"/checkout\");\r\n   };\r\n\r\n   render() {\r\n      const disabledInfo = { ...this.props.ings };\r\n      for (let key in disabledInfo) {\r\n         disabledInfo[key] = disabledInfo[key] <= 0;\r\n      }\r\n\r\n      let orderSummary = null;\r\n      let burger = this.props.error ? \"Cannot load ingredients\" : <Spinner />;\r\n\r\n      if (this.props.ings) {\r\n         burger = (\r\n            <>\r\n               <Burger ingredients={this.props.ings} />\r\n               <BuildControls\r\n                  ingredientAdded={this.props.onAddIngredient}\r\n                  ingredientRemoved={this.props.onRemoveIngredient}\r\n                  disabled={disabledInfo}\r\n                  price={this.props.price}\r\n                  purchasable={this.updatePurchaseState(this.props.ings)}\r\n                  isAuth={this.props.isAuthenticated}\r\n                  purchasing={this.purchaseHandler}\r\n               />\r\n            </>\r\n         );\r\n         orderSummary = (\r\n            <OrderSummary\r\n               ingredients={this.props.ings}\r\n               price={this.props.price}\r\n               purchaseCancelled={this.purchaseCancelHandler}\r\n               purchaseContinued={this.purchaseContinueHandler}\r\n            />\r\n         );\r\n      }\r\n\r\n      return (\r\n         <>\r\n            <Modal\r\n               show={this.state.purchasing}\r\n               modalClosed={this.purchaseCancelHandler}\r\n            >\r\n               {orderSummary}\r\n            </Modal>\r\n            {burger}\r\n         </>\r\n      );\r\n   }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n   return {\r\n      ings: state.burgerBuilder.ingredients,\r\n      price: state.burgerBuilder.totalPrice,\r\n      error: state.burgerBuilder.error,\r\n      isAuthenticated: state.auth.idToken !== null,\r\n   };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n   return {\r\n      onAddIngredient: ingName => dispatch(actions.addIngredient(ingName)),\r\n      onRemoveIngredient: ingName =>\r\n         dispatch(actions.removeIngredient(ingName)),\r\n      onInitIngredients: () => {\r\n         dispatch(actions.initIngredients());\r\n      },\r\n      onInitPurchased: () => {\r\n         dispatch(actions.purchaseInit());\r\n      },\r\n      onSetAuthRedirectPath: path =>\r\n         dispatch(actions.setAuthRedirectPath(path)),\r\n   };\r\n};\r\n\r\nexport default connect(\r\n   mapStateToProps,\r\n   mapDispatchToProps\r\n)(withErrorHandler(BurgerBuilder, axios));\r\n","import * as actionTypes from \"./actionTypes\";\r\nimport axios from '../../axios-orders'\r\n\r\nexport const addIngredient = name => {\r\n   return {\r\n      type: actionTypes.ADD_INGREDIENT,\r\n      ingredientName: name,\r\n   };\r\n};\r\n\r\nexport const removeIngredient = name => {\r\n   return {\r\n      type: actionTypes.REMOVE_INGREDIENT,\r\n      ingredientName: name,\r\n   };\r\n};\r\n\r\nexport const setIngredients = ingredients => {\r\n   return {\r\n      type: actionTypes.SET_INGREDIENTS,\r\n      ingredients: ingredients,\r\n   };\r\n};\r\n\r\nexport const fetchIngredientsFailed = ()=>{\r\n    return{\r\n        type: actionTypes.FETCH_INGREDIENTS_FAILED,\r\n    }\r\n}\r\n\r\nexport const initIngredients = () => {\r\n   return dispatch => {\r\n        axios\r\n           .get(\"https://my-burger-react-58764.firebaseio.com/ingredients.json\")\r\n           .then(res => {\r\n              dispatch(setIngredients(res.data));\r\n           })\r\n           .catch(err => {\r\n              dispatch(fetchIngredientsFailed())\r\n           });\r\n   };\r\n};\r\n","import * as actionTypes from \"./actionTypes\";\r\nimport axios from \"../../axios-orders\";\r\n\r\nexport const purchaseBurgerSuccess = (id, orderData) => {\r\n   return {\r\n      type: actionTypes.PURCHASE_BURGER_SUCCESS,\r\n      orderId: id,\r\n      orderData: orderData,\r\n   };\r\n};\r\n\r\nexport const purchaseBurgerFail = error => {\r\n   return {\r\n      type: actionTypes.PURCHASE_BURGER_FAIL,\r\n      error: error,\r\n   };\r\n};\r\n\r\nexport const purchaseBurgerStart = () => {\r\n   return {\r\n      type: actionTypes.PURCHASE_BURGER_START,\r\n   };\r\n};\r\n\r\nexport const purchaseBurger = (orderData, token) => {\r\n   return dispatch => {\r\n      dispatch(purchaseBurgerStart());\r\n      axios\r\n         .post(\"/orders.json?auth=\" + token, orderData)\r\n         .then(res => {\r\n            dispatch(purchaseBurgerSuccess(res.data.name, orderData));\r\n         })\r\n         .catch(error => dispatch(purchaseBurgerFail(error)));\r\n   };\r\n};\r\n\r\nexport const purchaseInit = () => {\r\n   return {\r\n      type: actionTypes.PURCHASE_INIT,\r\n   };\r\n};\r\n\r\nexport const fetchOrdersSuccess = orders => {\r\n   return {\r\n      type: actionTypes.FETCH_ORDERS_SUCCESS,\r\n      orders: orders,\r\n   };\r\n};\r\n\r\nexport const fetchOrdersFail = error => {\r\n   return {\r\n      type: actionTypes.FETCH_ORDERS_FAIL,\r\n      error: error,\r\n   };\r\n};\r\n\r\nexport const fetchOrdersStart = () => {\r\n   return {\r\n      type: actionTypes.FETCH_ORDERS_START,\r\n   };\r\n};\r\n\r\nexport const fetchOrders = (token, userId) => {\r\n   return dispatch => {\r\n      dispatch(fetchOrdersStart());\r\n      const queryParams = `?auth=${token}&orderBy=\"userId\"&equalTo=\"${userId}\"`;\r\n      axios\r\n         .get(`/orders.json${queryParams}`)\r\n         .then(res => {\r\n            const fetchedOrders = [];\r\n            for (let key in res.data) {\r\n               fetchedOrders.push({ ...res.data[key], id: key });\r\n            }\r\n\r\n            dispatch(fetchOrdersSuccess(fetchedOrders));\r\n         })\r\n         .catch(err => {\r\n            dispatch(fetchOrdersFail(err));\r\n         });\r\n   };\r\n};\r\n","import React from \"react\";\r\n\r\nimport Burger from \"../Burger/Burger\";\r\nimport Button from \"../UI/Button/Button\";\r\n\r\nimport styles from \"../../styles/CheckoutSummary.module.css\";\r\n\r\nexport default function CheckoutSummary(props) {\r\n   return (\r\n      <div className={styles.CheckoutSummary}>\r\n         <h1>Some catchy text</h1>\r\n         <div style={{ width: \"100%\", margin: \"auto\" }}>\r\n            <Burger ingredients={props.ingredients} />\r\n         </div>\r\n         <Button btnType=\"Danger\" clicked={props.checkoutCancel}>\r\n            CANCEL\r\n         </Button>\r\n         <Button btnType=\"Success\" clicked={props.checkoutContinue}>\r\n            CONTINUE\r\n         </Button>\r\n      </div>\r\n   );\r\n}\r\n","import React from \"react\";\r\nimport styles from \"../../../styles/Input.module.css\";\r\n\r\nexport default function Input(props) {\r\n   let inputElement = null;\r\n   const inputStyle = [styles.InputElement];\r\n\r\n   if (props.invalid && props.shouldValidate && props.touched) {\r\n      inputStyle.push(styles.Invalid);\r\n   }\r\n\r\n   switch (props.elementType) {\r\n      case \"input\":\r\n         inputElement = (\r\n            <input\r\n               className={inputStyle.join(\" \")}\r\n               {...props.elementConfig}\r\n               value={props.value}\r\n               onChange={props.changed}\r\n            />\r\n         );\r\n         break;\r\n      case \"textarea\":\r\n         inputElement = (\r\n            <textarea\r\n               className={inputStyle.join(\" \")}\r\n               {...props.elementConfig}\r\n               value={props.value}\r\n               onChange={props.changed}\r\n            />\r\n         );\r\n         break;\r\n      case \"select\":\r\n         inputElement = (\r\n            <select\r\n               className={inputStyle.join(\" \")}\r\n               value={props.value}\r\n               onChange={props.changed}\r\n            >\r\n               {props.elementConfig.options.map(option => (\r\n                  <option key={option.value} value={option.value}>\r\n                     {option.displayValue}\r\n                  </option>\r\n               ))}\r\n            </select>\r\n         );\r\n         break;\r\n      default:\r\n         inputElement = (\r\n            <input\r\n               className={inputStyle.join(\" \")}\r\n               {...props.elementConfig}\r\n               value={props.value}\r\n               onChange={props.changed}\r\n            />\r\n         );\r\n   }\r\n\r\n   return (\r\n      <div className={styles.Input}>\r\n         <label className={styles.Label}>{props.label}</label>\r\n         {inputElement}\r\n      </div>\r\n   );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport Button from \"../../components/UI/Button/Button\";\r\nimport Spinner from \"../../components/UI/Spinner/Spinner\";\r\nimport Input from \"../../components/UI/Input/Input\";\r\nimport withErrorHandler from \"../../hoc/withErrorHandler\";\r\n\r\nimport styles from \"../../styles/ContactData.module.css\";\r\nimport axios from \"../../axios-orders\";\r\nimport * as actions from \"../../store/actions/index\";\r\n\r\nclass ContactData extends Component {\r\n   state = {\r\n      orderForm: {\r\n         name: {\r\n            elementType: \"input\",\r\n            elementConfig: {\r\n               type: \"text\",\r\n               placeholder: \"Your Name\",\r\n            },\r\n            value: \"\",\r\n            validation: {\r\n               required: true,\r\n               minLength: 5,\r\n            },\r\n            valid: false,\r\n            touched: false,\r\n         },\r\n         street: {\r\n            elementType: \"input\",\r\n            elementConfig: {\r\n               type: \"text\",\r\n               placeholder: \"Street\",\r\n            },\r\n            value: \"\",\r\n            validation: {\r\n               required: true,\r\n            },\r\n            valid: false,\r\n            touched: false,\r\n         },\r\n         zipCode: {\r\n            elementType: \"input\",\r\n            elementConfig: {\r\n               type: \"text\",\r\n               placeholder: \"ZIP Code\",\r\n            },\r\n            value: \"\",\r\n            validation: {\r\n               required: true,\r\n            },\r\n            valid: false,\r\n            touched: false,\r\n         },\r\n         country: {\r\n            elementType: \"input\",\r\n            elementConfig: {\r\n               type: \"text\",\r\n               placeholder: \"Country\",\r\n            },\r\n            value: \"\",\r\n            validation: {\r\n               required: true,\r\n            },\r\n            valid: false,\r\n            touched: false,\r\n         },\r\n         email: {\r\n            elementType: \"email\",\r\n            elementConfig: {\r\n               type: \"text\",\r\n               placeholder: \"Your email\",\r\n            },\r\n            value: \"\",\r\n            validation: {\r\n               required: true,\r\n            },\r\n            valid: false,\r\n            touched: false,\r\n         },\r\n         deliveryMethod: {\r\n            elementType: \"select\",\r\n            elementConfig: {\r\n               options: [\r\n                  { value: \"fastest\", displayValue: \"Fastest\" },\r\n                  {\r\n                     value: \"cheapest\",\r\n                     displayValue: \"Cheapest\",\r\n                  },\r\n               ],\r\n            },\r\n            value: \"Fastest\",\r\n            validation: {},\r\n            valid: true,\r\n         },\r\n      },\r\n      formIsValid: false,\r\n   };\r\n\r\n   orderHandler = event => {\r\n      event.preventDefault();\r\n      const formData = {};\r\n      for (let el in this.state.orderForm) {\r\n         formData[el] = this.state.orderForm[el].value;\r\n      }\r\n      const priceFixed = Number.parseFloat(this.props.price).toFixed(2);\r\n      const order = {\r\n         ingredients: this.props.ings,\r\n         price: priceFixed,\r\n         orderData: formData,\r\n         userId: this.props.userId,\r\n      };\r\n      console.log(\"onOrderBurger\");\r\n\r\n      this.props.onOrderBurger(order, this.props.token);\r\n   };\r\n\r\n   checkValidation = (value, rules) => {\r\n      let isValid = true;\r\n      if (rules.required) {\r\n         isValid = value.trim() !== \"\" && isValid;\r\n      }\r\n\r\n      if (rules.minLength) {\r\n         isValid = value.length >= rules.minLength && isValid;\r\n      }\r\n      return isValid;\r\n   };\r\n\r\n   changedHandler = (e, inputElement) => {\r\n      const updatedOrderForm = { ...this.state.orderForm };\r\n      const updatedFormElements = {\r\n         ...updatedOrderForm[inputElement],\r\n      };\r\n      updatedFormElements.value = e.target.value;\r\n      updatedFormElements.valid = this.checkValidation(\r\n         updatedFormElements.value,\r\n         updatedFormElements.validation\r\n      );\r\n      updatedFormElements.touched = true;\r\n      updatedOrderForm[inputElement] = updatedFormElements;\r\n\r\n      let formIsValid = true;\r\n      for (let inputElement in updatedOrderForm) {\r\n         formIsValid = updatedOrderForm[inputElement].valid && formIsValid;\r\n      }\r\n\r\n      this.setState({\r\n         orderForm: updatedOrderForm,\r\n         formIsValid: formIsValid,\r\n      });\r\n   };\r\n\r\n   render() {\r\n      let formElementsArray = [];\r\n      for (let el in this.state.orderForm) {\r\n         formElementsArray.push({\r\n            id: el,\r\n            config: this.state.orderForm[el],\r\n         });\r\n      }\r\n\r\n      let form = (\r\n         <form onSubmit={this.orderHandler}>\r\n            {formElementsArray.map(el => (\r\n               <Input\r\n                  key={el.id}\r\n                  elementType={el.config.elementType}\r\n                  elementConfig={el.config.elementConfig}\r\n                  value={el.config.value}\r\n                  changed={event => this.changedHandler(event, el.id)}\r\n                  invalid={!el.config.valid}\r\n                  shouldValidate={el.config.validation}\r\n                  touched={el.config.touched}\r\n               />\r\n            ))}\r\n            <Button btnType=\"Success\" disabled={!this.state.formIsValid}>\r\n               ORDER\r\n            </Button>\r\n         </form>\r\n      );\r\n      if (this.props.loading) {\r\n         form = <Spinner />;\r\n      }\r\n      return (\r\n         <div className={styles.ContactData}>\r\n            <h4>Enter your Contact Data</h4>\r\n            {form}\r\n         </div>\r\n      );\r\n   }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n   return {\r\n      ings: state.burgerBuilder.ingredients,\r\n      price: state.burgerBuilder.totalPrice,\r\n      loading: state.order.loading,\r\n      token: state.auth.idToken,\r\n      userId: state.auth.userId,\r\n   };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n   return {\r\n      onOrderBurger: (orderData, token) =>\r\n         dispatch(actions.purchaseBurger(orderData, token)),\r\n   };\r\n};\r\n\r\nexport default connect(\r\n   mapStateToProps,\r\n   mapDispatchToProps\r\n)(withErrorHandler(ContactData, axios));\r\n","import React, { Component } from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport CheckoutSummary from \"../../components/Order/CheckoutSummary\";\r\nimport ContactData from \"./ContactData\";\r\n\r\nclass Checkout extends Component {\r\n   checkoutCancelHandler = () => {\r\n      this.props.history.goBack();\r\n   };\r\n\r\n   checkoutContinueHandler = () => {\r\n      this.props.history.replace(\"/checkout/contact-data\");\r\n   };\r\n\r\n   render() {\r\n      let summary = <Redirect to=\"/\" />;\r\n      if (this.props.ings) {\r\n         const purchased = this.props.purchased ? <Redirect to=\"/\" /> : null;\r\n         summary = (\r\n            <div>\r\n               {purchased}\r\n               <CheckoutSummary\r\n                  ingredients={this.props.ings}\r\n                  checkoutCancel={this.checkoutCancelHandler}\r\n                  checkoutContinue={this.checkoutContinueHandler}\r\n               />\r\n               <Route\r\n                  path={`${this.props.match.path}/contact-data`}\r\n                  component={ContactData}\r\n               />\r\n            </div>\r\n         );\r\n      }\r\n      return summary;\r\n   }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n   return {\r\n      ings: state.burgerBuilder.ingredients,\r\n      purchased: state.order.purchased,\r\n   };\r\n};\r\n\r\nexport default connect(mapStateToProps, null)(Checkout);\r\n","import React from \"react\";\r\nimport styles from \"../../styles/Order.module.css\";\r\n\r\nexport default function Order(props) {\r\n   const ingredients = [];\r\n   for (let ingredientName in props.ingredients) {\r\n      ingredients.push({\r\n         name: ingredientName,\r\n         amount: props.ingredients[ingredientName],\r\n      });\r\n   }\r\n\r\n   const displayIngredients = ingredients.map(ing => {\r\n      return (\r\n         <p className={styles.Ingredient} key={ing.name}>\r\n            {ing.name}: {ing.amount}\r\n         </p>\r\n      );\r\n   });\r\n\r\n   return (\r\n      <div className={styles.Order}>\r\n         <p>Ingredients: </p>\r\n         {displayIngredients}\r\n         <p>\r\n            Price: <strong>{props.price} PLN</strong>\r\n         </p>\r\n      </div>\r\n   );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Order from \"../../components/Order/Order\";\r\nimport axios from \"../../axios-orders\";\r\nimport withErrorHandler from \"../../hoc/withErrorHandler\";\r\nimport Spinner from \"../../components/UI/Spinner/Spinner\";\r\n\r\nimport * as actions from \"../../store/actions/index\";\r\n\r\nclass Orders extends Component {\r\n   componentDidMount() {\r\n      this.props.onFetchOrders(this.props.token, this.props.userId);\r\n   }\r\n\r\n   render() {\r\n      let orders = <Spinner />;\r\n      if (!this.props.loading) {\r\n         orders = this.props.orders.map(order => {\r\n            return (\r\n               <Order\r\n                  key={order.id}\r\n                  ingredients={order.ingredients}\r\n                  price={order.price}\r\n               />\r\n            );\r\n         });\r\n      }\r\n      return <div>{orders}</div>;\r\n   }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n   return {\r\n      orders: state.order.orders,\r\n      loading: state.order.loading,\r\n      token: state.auth.idToken,\r\n      userId: state.auth.userId,\r\n   };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n   return {\r\n      onFetchOrders: (token, userId) =>\r\n         dispatch(actions.fetchOrders(token, userId)),\r\n   };\r\n};\r\n\r\nexport default connect(\r\n   mapStateToProps,\r\n   mapDispatchToProps\r\n)(withErrorHandler(Orders, axios));\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport Input from \"../../components/UI/Input/Input\";\r\nimport Button from \"../../components/UI/Button/Button\";\r\nimport Spinner from \"../../components/UI/Spinner/Spinner\";\r\n\r\nimport * as actions from \"../../store/actions/index\";\r\nimport styles from \"../../styles/Auth.module.css\";\r\n\r\nclass Auth extends Component {\r\n   state = {\r\n      controls: {\r\n         email: {\r\n            elementType: \"input\",\r\n            elementConfig: {\r\n               type: \"email\",\r\n               placeholder: \"Mail Address\",\r\n            },\r\n            value: \"\",\r\n            validation: {\r\n               required: true,\r\n               isEmail: true,\r\n            },\r\n            valid: false,\r\n            touched: false,\r\n         },\r\n         password: {\r\n            elementType: \"input\",\r\n            elementConfig: {\r\n               type: \"password\",\r\n               placeholder: \"Password\",\r\n            },\r\n            value: \"\",\r\n            validation: {\r\n               required: true,\r\n               minLength: 6,\r\n            },\r\n            valid: false,\r\n            touched: false,\r\n         },\r\n      },\r\n      formIsValid: false,\r\n      isSignup: true,\r\n   };\r\n\r\n   componentDidMount() {\r\n      if (!this.props.buildingBurger && this.props.authRedirectPath !== \"/\") {\r\n         this.props.onSetAuthRedirectPath();\r\n      }\r\n   }\r\n\r\n   checkValidity = (value, rule) => {\r\n      let isValid = true;\r\n      if (rule.required) {\r\n         isValid = value.trim() !== \"\" && isValid;\r\n      }\r\n\r\n      if (rule.minLength) {\r\n         isValid = value.length >= rule.minLength && isValid;\r\n      }\r\n\r\n      if (rule.isEmail) {\r\n         const pattern = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n         isValid = pattern.test(value) && isValid;\r\n      }\r\n\r\n      return isValid;\r\n   };\r\n\r\n   inputChangedHandler = (inputElement, event) => {\r\n      const updatedControls = {\r\n         ...this.state.controls,\r\n         [inputElement]: {\r\n            ...this.state.controls[inputElement],\r\n            value: event.target.value,\r\n            valid: this.checkValidity(\r\n               event.target.value,\r\n               this.state.controls[inputElement].validation\r\n            ),\r\n            touched: true,\r\n         },\r\n      };\r\n\r\n      let formIsValid = true;\r\n      for (let element in updatedControls) {\r\n         formIsValid = updatedControls[element].valid && formIsValid;\r\n      }\r\n\r\n      this.setState({ controls: updatedControls, formIsValid: formIsValid });\r\n   };\r\n\r\n   submitHandler = event => {\r\n      event.preventDefault();\r\n      this.props.onAuth(\r\n         this.state.controls.email.value,\r\n         this.state.controls.password.value,\r\n         this.state.isSignup\r\n      );\r\n   };\r\n\r\n   switchAuthModeHandler = () => {\r\n      this.setState(prevState => {\r\n         return { isSignup: !prevState.isSignup };\r\n      });\r\n   };\r\n\r\n   render() {\r\n      const formElementsArray = [];\r\n      for (let key in this.state.controls) {\r\n         formElementsArray.push({\r\n            id: key,\r\n            config: this.state.controls[key],\r\n         });\r\n      }\r\n      let form = formElementsArray.map(formElement => (\r\n         <Input\r\n            key={formElement.id}\r\n            elementType={formElement.config.elementType}\r\n            elementConfig={formElement.config.elementConfig}\r\n            value={formElement.config.value}\r\n            invalid={!formElement.config.valid}\r\n            shouldValidate={formElement.config.validation}\r\n            touched={formElement.config.touched}\r\n            changed={e => this.inputChangedHandler(formElement.id, e)}\r\n         />\r\n      ));\r\n\r\n      if (this.props.loading) {\r\n         form = <Spinner />;\r\n      }\r\n\r\n      let errorMessage = null;\r\n      if (this.props.error) {\r\n         errorMessage = (\r\n            <p style={{ color: \"red\", fontWeight: \"bold\" }}>\r\n               {this.props.error.message}\r\n            </p>\r\n         );\r\n      }\r\n\r\n      let authRedirect = null;\r\n\r\n      if (this.props.isAuthenticated) {\r\n         authRedirect = <Redirect to={this.props.authRedirectPath} />;\r\n      }\r\n\r\n      return (\r\n         <div className={styles.Auth}>\r\n            {authRedirect}\r\n            {errorMessage}\r\n            <form onSubmit={this.submitHandler}>\r\n               {form}\r\n               <Button btnType=\"Success\">Submit</Button>\r\n            </form>\r\n            <Button btnType=\"Danger\" clicked={this.switchAuthModeHandler}>\r\n               {this.state.isSignup ? \"I want to SIGN IN\" : \"I want to SIGN UP\"}\r\n            </Button>\r\n         </div>\r\n      );\r\n   }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n   return {\r\n      loading: state.auth.loading,\r\n      error: state.auth.error,\r\n      isAuthenticated: state.auth.idToken !== null,\r\n      buildingBurger: state.burgerBuilder.building,\r\n      authRedirectPath: state.auth.authRedirectPath,\r\n   };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n   return {\r\n      onAuth: (email, password, isSignup) =>\r\n         dispatch(actions.auth(email, password, isSignup)),\r\n      onSetAuthRedirectPath: () => dispatch(actions.setAuthRedirectPath(\"/\")),\r\n   };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Auth);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nimport * as actions from \"../../store/actions/index\";\r\n\r\nclass Logout extends Component {\r\n   componentDidMount() {\r\n      this.props.onLogout();\r\n   }\r\n\r\n   render() {\r\n      return <Redirect to=\"/\" />;\r\n   }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n   return {\r\n      onLogout: () => dispatch(actions.signOut()),\r\n   };\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(Logout);\r\n","import React, { Component } from \"react\";\nimport { Route, Switch, withRouter, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport Layout from \"./components/Layout/Layout.jsx\";\nimport BurgerBuilder from \"./containers/BurgerBuilder/BurgerBuilder\";\nimport Checkout from \"./containers/Checkout/Checkout\";\nimport Orders from \"./containers/Orders/Orders\";\nimport Auth from \"./containers/Auth/Auth\";\nimport Logout from \"./containers/Auth/Logout\";\nimport * as actions from \"./store/actions/index\";\n\nclass App extends Component {\n   componentDidMount() {\n      this.props.onTryAuthSignup();\n   }\n\n   render() {\n      let routes = (\n         <Switch>\n            <Route path=\"/auth\" component={Auth} />\n            <Route path=\"/\" component={BurgerBuilder} />\n            <Redirect to=\"/\" />\n         </Switch>\n      );\n\n      if (this.props.isAuthenticated) {\n         routes = (\n            <Switch>\n               <Route path=\"/checkout\" component={Checkout} />\n               <Route path=\"/orders\" component={Orders} />\n               <Route path=\"/auth\" component={Auth} />\n               <Route path=\"/logout\" component={Logout} />\n               <Route path=\"/\" component={BurgerBuilder} />\n               {/* <Redirect to=\"/\" /> */}\n            </Switch>\n         );\n      }\n\n      return (\n         <div>\n            <Layout>{routes}</Layout>\n         </div>\n      );\n   }\n}\n\nconst mapStateToProps = state => {\n   return {\n      isAuthenticated: state.auth.idToken !== null,\n   };\n};\n\nconst mapDispatchToProps = dispatch => {\n   return {\n      onTryAuthSignup: () => dispatch(actions.authCheckState()),\n   };\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(App));\n","export const updateObject = (oldObject, updatedProperties) => {\r\n   return {\r\n      ...oldObject,\r\n      ...updatedProperties,\r\n   };\r\n};\r\n","import * as actionTypes from \"../actions/actionTypes\";\r\nimport { updateObject } from \"../utility\";\r\n\r\nconst initialState = {\r\n   ingredients: null,\r\n   totalPrice: 4,\r\n   error: false,\r\n   building: false,\r\n};\r\n\r\nconst INGREDIENT_PRICES = {\r\n   salad: 0.5,\r\n   cheese: 0.4,\r\n   bacon: 0.7,\r\n   meat: 1.5,\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n   switch (action.type) {\r\n      case actionTypes.ADD_INGREDIENT:\r\n         return addIngredient(state, action);\r\n\r\n      case actionTypes.REMOVE_INGREDIENT:\r\n         return removeIngredient(state, action);\r\n\r\n      case actionTypes.SET_INGREDIENTS:\r\n         return setIngredients(state, action);\r\n\r\n      case actionTypes.FETCH_INGREDIENTS_FAILED:\r\n         return fetchIngredients(state, action);\r\n\r\n      default:\r\n         return state;\r\n   }\r\n};\r\n\r\nconst addIngredient = (state, action) => {\r\n   const updatedIngredientAdd = {\r\n      [action.ingredientName]: state.ingredients[action.ingredientName] + 1,\r\n   };\r\n   const updatedIngredientsAdd = updateObject(\r\n      state.ingredients,\r\n      updatedIngredientAdd\r\n   );\r\n   const updateStateAdd = {\r\n      ingredients: updatedIngredientsAdd,\r\n      totalPrice: state.totalPrice + INGREDIENT_PRICES[action.ingredientName],\r\n      building: true,\r\n   };\r\n   return updateObject(state, updateStateAdd);\r\n};\r\n\r\nconst removeIngredient = (state, action) => {\r\n   const updatedIngredientRem = {\r\n      [action.ingredientName]: state.ingredients[action.ingredientName] - 1,\r\n   };\r\n   const updatedIngredientsRem = updateObject(\r\n      state.ingredients,\r\n      updatedIngredientRem\r\n   );\r\n   const updateStateRem = {\r\n      ingredients: updatedIngredientsRem,\r\n      totalPrice: state.totalPrice - INGREDIENT_PRICES[action.ingredientName],\r\n      building: true,\r\n   };\r\n   return updateObject(state, updateStateRem);\r\n};\r\n\r\nconst setIngredients = (state, action) => {\r\n   return updateObject(state, {\r\n      ingredients: action.ingredients,\r\n      error: false,\r\n      totalPrice: initialState.totalPrice,\r\n      building: false,\r\n   });\r\n};\r\n\r\nconst fetchIngredients = (state, action) => {\r\n   return updateObject(state, { error: true });\r\n};\r\n\r\nexport default reducer;\r\n","import * as actionTypes from \"../actions/actionTypes\";\r\nimport { updateObject } from \"../utility\";\r\n\r\nconst initialState = {\r\n   orders: [],\r\n   loading: false,\r\n   purchased: false,\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n   switch (action.type) {\r\n      case actionTypes.PURCHASE_INIT:\r\n         return initPurchase(state, action);\r\n\r\n      case actionTypes.PURCHASE_BURGER_START:\r\n         return purchaseBurgerStart(state, action);\r\n\r\n      case actionTypes.PURCHASE_BURGER_SUCCESS:\r\n         return purchaseBurgerSuccess(state, action);\r\n\r\n      case actionTypes.PURCHASE_BURGER_FAIL:\r\n         return purchaseBurgerFail(state, action);\r\n\r\n      case actionTypes.FETCH_ORDERS_START:\r\n         return fetchOrdersStart(state, action);\r\n\r\n      case actionTypes.FETCH_ORDERS_SUCCESS:\r\n         return fetchOrdersSuccess(state, action);\r\n\r\n      case actionTypes.FETCH_ORDERS_FAIL:\r\n         return fetchOrdersFail(state, action);\r\n\r\n      default:\r\n         return state;\r\n   }\r\n};\r\n\r\nconst initPurchase = (state, action) => {\r\n   return updateObject(state, { purchased: false });\r\n};\r\n\r\nconst purchaseBurgerStart = (state, action) => {\r\n   return updateObject(state, { loading: true });\r\n};\r\n\r\nconst purchaseBurgerSuccess = (state, action) => {\r\n   const newOrder = updateObject(action.orderData, {\r\n      id: action.orderId,\r\n   });\r\n   return updateObject(state, {\r\n      loading: false,\r\n      purchased: true,\r\n      orders: state.orders.concat(newOrder),\r\n   });\r\n};\r\n\r\nconst purchaseBurgerFail = (state, action) => {\r\n   return updateObject(state, { loading: false });\r\n};\r\n\r\nconst fetchOrdersStart = (state, action) => {\r\n   return updateObject(state, { loading: true });\r\n};\r\n\r\nconst fetchOrdersSuccess = (state, action) => {\r\n   return updateObject(state, { orders: action.orders, loading: false });\r\n};\r\n\r\nconst fetchOrdersFail = (state, action) => {\r\n   return updateObject(state, { loading: false });\r\n};\r\n\r\nexport default reducer;\r\n","import * as actionType from \"../actions/actionTypes\";\r\nimport { updateObject } from \"../utility\";\r\n\r\nconst initialState = {\r\n   idToken: null,\r\n   userId: null,\r\n   error: null,\r\n   loading: false,\r\n   authRedirectPath: \"/\",\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n   switch (action.type) {\r\n      case actionType.AUTH_START:\r\n         return authStart(state, action);\r\n      case actionType.AUTH_SUCCESS:\r\n         return authSuccess(state, action);\r\n      case actionType.AUTH_FAIL:\r\n         return authFail(state, action);\r\n      case actionType.AUTH_SIGNOUT:\r\n         return authSignOut(state, action);\r\n      case actionType.SET_AUTH_REDIRECT_PATH:\r\n         return setAuthRedirectPath(state, action);\r\n      default:\r\n         return state;\r\n   }\r\n};\r\n\r\nconst setAuthRedirectPath = (state, action) => {\r\n   return updateObject(state, { authRedirectPath: action.path });\r\n};\r\n\r\nconst authStart = (state, action) => {\r\n   return updateObject(state, { error: null, loading: true });\r\n};\r\n\r\nconst authSuccess = (state, action) => {\r\n   return updateObject(state, {\r\n      idToken: action.idToken,\r\n      userId: action.userId,\r\n      error: null,\r\n      loading: false,\r\n   });\r\n};\r\n\r\nconst authFail = (state, action) => {\r\n   return updateObject(state, {\r\n      error: action.error,\r\n      loading: false,\r\n   });\r\n};\r\n\r\nconst authSignOut = (state, action) => {\r\n   return updateObject(state, {\r\n      idToken: null,\r\n      userId: null,\r\n   });\r\n};\r\n\r\nexport default reducer;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport { createStore, applyMiddleware, compose, combineReducers } from \"redux\";\nimport thunk from \"redux-thunk\";\n\nimport App from \"./App\";\nimport burgerBuilderReducer from \"./store/reducers/burgerBuilder\";\nimport orderReducer from \"./store/reducers/order\";\nimport authReducer from './store/reducers/auth';\nimport \"./index.css\";\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst rootReducer = combineReducers({\n   burgerBuilder: burgerBuilderReducer,\n   order: orderReducer,\n   auth: authReducer,\n});\n\nconst store = createStore(\n   rootReducer,\n   composeEnhancers(applyMiddleware(thunk))\n);\n\nconst app = (\n   <Provider store={store}>\n      <BrowserRouter>\n         <App />\n      </BrowserRouter>\n   </Provider>\n);\n\nReactDOM.render(\n   <React.StrictMode>{app}</React.StrictMode>,\n   document.getElementById(\"root\")\n);\n"],"sourceRoot":""}